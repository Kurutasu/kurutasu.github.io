<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memotaro</title>
    <description>network engineering，algorithmic trading，machine learningに関する技術メモを書きます．
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 14 Nov 2017 23:02:47 +0900</pubDate>
    <lastBuildDate>Tue, 14 Nov 2017 23:02:47 +0900</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>Reajob，South Australia to improve wind farm with world’s largest battery</title>
        <description>&lt;p&gt;帰国してから英語力が落ちまくっているので，オンライン英会話を再開することにした．とにかく選択肢が多いので，無料体験をはしごして決める．今回は，出国前まで続けていた&lt;a href=&quot;https://www.rarejob.com&quot;&gt;Reajob&lt;/a&gt;の&lt;a href=&quot;https://www.rarejob.com/dna&quot;&gt;Article discussion&lt;/a&gt;．以下はその受講メモ．&lt;/p&gt;

&lt;h1 id=&quot;予習&quot;&gt;予習&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.rarejob.com/dna/2017/11/13/south-australia-to-improve-wind-farm-with-worlds-largest-battery/&quot;&gt;Daily news article&lt;/a&gt;のページで：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;文章を見ずにリスニング１回&lt;/li&gt;
  &lt;li&gt;文章を見ながらシャドウイング6回&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;講義内容&quot;&gt;講義内容&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;自己紹介．沖縄に行ったことがあるそうなので少し盛り上がる．&lt;/li&gt;
  &lt;li&gt;タイトルを読んだあと，停電に関する質疑応答．
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;大規模な停電を経験したことがあるか？&lt;/strong&gt;：ある．2013年の大震災のとき．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;どのくらいの間停電したか？&lt;/strong&gt;：一日中（うろ覚え）．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;停電時，どのような活動に影響がでたか？&lt;/strong&gt;：家電が止まって大変だった．（今思えば，電車が止まって帰宅難民が出たとか言えばよかった）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;New wordsを音読．&lt;/li&gt;
  &lt;li&gt;Articleを音読．途中で３つほど質問に答える．&lt;/li&gt;
  &lt;li&gt;Articleの即興サマライズ．&lt;/li&gt;
  &lt;li&gt;Viewpoint discussion．&lt;/li&gt;
  &lt;li&gt;少し時間が余ったので逆質問．
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;サマライズが難しかった．何かコツがあったら教えてほしい&lt;/strong&gt;：記事全体を眺めて，重要そうな部分を抜き出せば良いよ．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;先生からのフィードバック&quot;&gt;先生からのフィードバック&lt;/h1&gt;

&lt;p&gt;特になし．&lt;/p&gt;

&lt;h1 id=&quot;学んだこと&quot;&gt;学んだこと&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ejje.weblio.jp/content/intermittent&quot;&gt;&lt;em&gt;intermittent&lt;/em&gt;&lt;/a&gt;：時々とぎれる，断続する，間欠性の．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ejje.weblio.jp/content/forestall&quot;&gt;&lt;em&gt;forestall&lt;/em&gt;&lt;/a&gt;：先んずる，機先を制する，出し抜く，買い占める．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ejje.weblio.jp/content/operational&quot;&gt;&lt;em&gt;operational&lt;/em&gt;&lt;/a&gt;：操作上の，経営上の；使用できる，運転可能な；作戦上の．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;感想&quot;&gt;感想&lt;/h1&gt;

&lt;p&gt;サマライズはやっぱり難しい．とりあえず話す習慣をつけることが大事だと思った．&lt;/p&gt;

&lt;p&gt;レアジョブはリーズナブルで安定しているが，できればネイティブスピーカーの先生に習いたい．もっといろいろ探してみる．&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Nov 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/11/13/reajob</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/13/reajob</guid>
        
        
        <category>english</category>
        
      </item>
    
      <item>
        <title>古川一郎，マーケティング・サイエンス入門</title>
        <description>&lt;p&gt;&lt;strong&gt;随時更新&lt;/strong&gt;：&lt;a href=&quot;http://amzn.asia/1QZt1OR&quot;&gt;古川一郎，他，マーケティング・サイエンス入門－市場対応の科学的マネジメント&lt;/a&gt;の読書メモ．&lt;/p&gt;

&lt;h1 id=&quot;まとめ&quot;&gt;まとめ&lt;/h1&gt;

&lt;h1 id=&quot;メモ&quot;&gt;メモ&lt;/h1&gt;

&lt;h2 id=&quot;0マーケティングサイエンスのすすめ&quot;&gt;0．マーケティング・サイエンスのすすめ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.5&lt;/strong&gt;：マーケティング・マネジメント・プロセス：
    &lt;ul&gt;
      &lt;li&gt;新規事業の発見：&lt;em&gt;Research&lt;/em&gt;．&lt;/li&gt;
      &lt;li&gt;マーケティング戦略：&lt;em&gt;Segmentation&lt;/em&gt;，&lt;em&gt;Targeting&lt;/em&gt;，&lt;em&gt;Positioning&lt;/em&gt;．&lt;/li&gt;
      &lt;li&gt;マーケティング戦術：&lt;em&gt;Marketing mix&lt;/em&gt;．&lt;/li&gt;
      &lt;li&gt;実行：&lt;em&gt;Inplementation&lt;/em&gt;．&lt;/li&gt;
      &lt;li&gt;制御：&lt;em&gt;Control&lt;/em&gt;．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-ビジネスチャンスの発見&quot;&gt;1. ビジネス・チャンスの発見&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.26&lt;/strong&gt;：プロデジー・モデルとは，顧客の購買行動から競争市場構造を把握する手法の一つ．ある製品を強制的に顧客の選択対象から除外したときに，顧客はどの他のブランドを選択するかを測定することで，競争構造を分析する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.27&lt;/strong&gt;：無構造市場仮説とは，既存の製品シェアに比例してシェア変動が起こるという仮説．プロデジー・モデルでは，検定者が想定する構造仮説と，無構造市場仮説を比較する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.33&lt;/strong&gt;：バス・モデルとは，イノベーションの普及モデル．自発的に購入するイノベーターと，すでに購入者消費者を模倣して購入するイミテーターを想定する．&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;期の売上&lt;script type=&quot;math/tex&quot;&gt;n(t)&lt;/script&gt;は，&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;期までの普及割合&lt;script type=&quot;math/tex&quot;&gt;F(t)&lt;/script&gt;，市場規模&lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;，イノベータ係数&lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;，およびイミテーター係数&lt;script type=&quot;math/tex&quot;&gt;q&lt;/script&gt;を使って，下式で表現できる．&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{align*}
n(t)=[p + q F(t)][1 - F(t)]N
\end{align*}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.35&lt;/strong&gt;：理論的には，3期以上のデータがあれば，回帰分析で&lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;，&lt;script type=&quot;math/tex&quot;&gt;q&lt;/script&gt;，および&lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;を推定可能．データ数が足りない場合は，類似製品の値を事前情報として用いたベイズ推定なども提案されている．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.38&lt;/strong&gt;：&lt;a href=&quot;http://iit.kke.co.jp/marketingscience/exercise/WebExercise/exercise01.html&quot;&gt;Webエクササイズ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-消費者行動&quot;&gt;2. 消費者行動&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.44&lt;/strong&gt;：知覚マップ（perception map）あるいはプロダクトマップ（product map）とは，様々なブランドに関する消費者の図示したもの．&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E5%A4%9A%E6%AC%A1%E5%85%83%E5%B0%BA%E5%BA%A6%E6%A7%8B%E6%88%90%E6%B3%95&quot;&gt;多次元尺度構成法&lt;/a&gt;（multi dimensional scaling; MDS）と&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E5%9B%A0%E5%AD%90%E5%88%86%E6%9E%90&quot;&gt;因子分析&lt;/a&gt;（factor analysis）がよく用いられる．&lt;/li&gt;
  &lt;li&gt;因子分析と&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90&quot;&gt;主成分分析&lt;/a&gt;は異なるらしい．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.45&lt;/strong&gt;：MDSで計算した知覚マップからは，軸の直感的な解釈は得られない．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.48&lt;/strong&gt;：購買履歴データを用いてマップを作成する場合は，消費者の知覚を直接測定したわけではないので，プロダクトマップと呼ばれる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.51&lt;/strong&gt;：消費者による製品の評価方法として，補償型と非補償型の２つがある．補償型の評価方法として，以下に示す加算式がある．製品&lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt;の評価&lt;script type=&quot;math/tex&quot;&gt;A_i&lt;/script&gt;は，その製品の属性&lt;script type=&quot;math/tex&quot;&gt;j&lt;/script&gt;に対する評価&lt;script type=&quot;math/tex&quot;&gt;b_{ij}&lt;/script&gt;と，その属性の重要度&lt;script type=&quot;math/tex&quot;&gt;h_j&lt;/script&gt;によって次のように表現できる．&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{align*}
A_i = \sum_j h_j b_{ij}
\end{align*}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.52&lt;/strong&gt;：非補償型の評価方法として，連結型，分散型，辞書編纂型がある．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.54&lt;/strong&gt;：ブランド選択モデルとして，補償型の評価方法を仮定することが多い．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.55&lt;/strong&gt;：消費者がブランド集合&lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;から特定のブランド&lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt;を選択する確率&lt;script type=&quot;math/tex&quot;&gt;P(i \mid C)&lt;/script&gt;は，そのブランドの効用&lt;script type=&quot;math/tex&quot;&gt;U_i&lt;/script&gt;を用いて次のように表現できる．&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{align*}
P(i \mid C) = \mathrm{Pr}[U_i &gt; U_j] \mathrm{~for~all~}
j \in C,~ j \neq i
\end{align*}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.55&lt;/strong&gt;：ここで，&lt;script type=&quot;math/tex&quot;&gt;U_i&lt;/script&gt;は，確定的部分&lt;script type=&quot;math/tex&quot;&gt;V_i&lt;/script&gt;，および確率的部分&lt;script type=&quot;math/tex&quot;&gt;\epsilon_i&lt;/script&gt;を用いて，次のように表現できる．&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{align*}
U_i = V_i + \epsilon_i
\end{align*}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.55&lt;/strong&gt;：ここで，&lt;script type=&quot;math/tex&quot;&gt;V_i&lt;/script&gt;は，ブランド&lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt;固有の魅力を表すパラメータ&lt;script type=&quot;math/tex&quot;&gt;\alpha_i&lt;/script&gt;と，マーケティング変数&lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;の影響を表すパラメータ&lt;script type=&quot;math/tex&quot;&gt;\beta_k&lt;/script&gt;と，そのマーケティング変数におけるブランド&lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt;の値&lt;script type=&quot;math/tex&quot;&gt;X_{ik}&lt;/script&gt;を用いて，次のように表現できる．&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{align*}
V_i = \alpha_i + \sum_k \beta_k X_{ik}
\end{align*}&lt;/script&gt;

&lt;h1 id=&quot;感想&quot;&gt;感想&lt;/h1&gt;
</description>
        <pubDate>Sun, 12 Nov 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/11/12/marketing-science</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/12/marketing-science</guid>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>Courcera，Marketing in a digital world：1. Product</title>
        <description>&lt;p&gt;&lt;strong&gt;随時更新&lt;/strong&gt;：&lt;a href=&quot;https://www.coursera.org/learn/marketing-digital&quot;&gt;Courcera，Marketing in a digital world&lt;/a&gt;の受講メモ．本講座は，イリノイ大学主催のオンライン講座であり，全7講座から成る&lt;a href=&quot;https://www.coursera.org/specializations/digital-marketing&quot;&gt;Digital marketing specialization&lt;/a&gt;の一つ．四週かけて，デジタル時代の&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%BC%E3%82%B1%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%83%9F%E3%83%83%E3%82%AF%E3%82%B9&quot;&gt;マーケティング・ミックス&lt;/a&gt;について学ぶ．第一週では，本講座の概要と，Productを取り扱う．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-11-08-marketing.jpg&quot; alt=&quot;marketing&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;about-the-course&quot;&gt;About the course&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;インターネット，スマートフォン，3Dプリンターに代表される技術革新により，市場のパワーバランスは，企業側から消費者側に傾きつつある．&lt;/li&gt;
  &lt;li&gt;本講座では，このような激動の時代におけるマーケティング手法を，実例や演習を交えて学習する．&lt;/li&gt;
  &lt;li&gt;本講座では，教材として&lt;a href=&quot;https://hbr.org/&quot;&gt;Harvard Business Review&lt;/a&gt;や&lt;a href=&quot;https://subscribe.sloanreview.mit.edu/ecom/SMR/app/live/subscriptions?&amp;amp;org=SMR&amp;amp;publ=SM&amp;amp;key_code=OSABC76&amp;amp;type=S&quot;&gt;MIT Sloan Management Review&lt;/a&gt;を用いる．また，補助教材として&lt;a href=&quot;https://books.google.co.jp/books?id=veuhAwAAQBAJ&amp;amp;source=gbs_book_other_versions&amp;amp;redir_esc=y&quot;&gt;Understanding Digital Marketing: Marketing Strategies for Engaging the Digital Generation&lt;/a&gt;が手元にあれば望ましいが，必須ではない．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;module-1-overview&quot;&gt;Module 1 overview&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Module 1では，productの観点から，最新のマーケティング手法を学ぶ．例えば，customer co-creationやdoppelgänger brandsなど．&lt;/li&gt;
  &lt;li&gt;Module 1では，7時間程度の勉強が必要．&lt;/li&gt;
  &lt;li&gt;Lakhani, K. R. (2013). &lt;a href=&quot;https://hbr.org/2013/04/using-the-crowd-as-an-innovation-partner&quot;&gt;Using the crowd as an innovation partner&lt;/a&gt;. &lt;em&gt;Harvard Business Review&lt;/em&gt;, 91(4). 60–69.
    &lt;ul&gt;
      &lt;li&gt;クラウドソーシングをうまく活用できている企業は少ない．これは，どのようなケースにおいてクラウドソーシングがうまく生きるか，確固とした理論が存在しないためである．本記事では，クラウドソーシングのガイドラインを提供する．&lt;/li&gt;
      &lt;li&gt;クラウドソーシングのメリットは，スケールしやすさ，多様性，コストの低さ，モチベーションの高さ，である．クラウドソーシング自体は昔から存在していたが，近年ツールが劇的に進化した．&lt;/li&gt;
      &lt;li&gt;クラウドソーシングには，&lt;strong&gt;Contest&lt;/strong&gt;，&lt;strong&gt;Collaborative community&lt;/strong&gt;，&lt;strong&gt;Complementor&lt;/strong&gt;，および&lt;strong&gt;Labor market&lt;/strong&gt;の4種類がある．&lt;/li&gt;
      &lt;li&gt;Contestは，どんな手法が有効かすらわからない，多様な実験的試行を必要とするタスクに有効である．&lt;a href=&quot;https://www.topcoder.com/&quot;&gt;TopCoder&lt;/a&gt;，&lt;a href=&quot;https://www.kaggle.com/&quot;&gt;Kaggle&lt;/a&gt;，&lt;a href=&quot;https://www.innocentive.com/&quot;&gt;InnoCentive&lt;/a&gt;などがこれに該当する．&lt;/li&gt;
      &lt;li&gt;Collaborative communitiesの例としては，IBMが自社でのWebサーバー開発を終了し，Apacheへのコントリビュートを開始したことが挙げられる．Collaborative communityは，Contestと違い，各人の貢献が最終的に一つの成果物となる．Collaborative communityが最もよく機能するのは，各人が自由に意見を交換し，情報を共有するときである．つまり，知的財産の保護はほとんど不可能である．&lt;/li&gt;
      &lt;li&gt;Complementorは，Apple storeのように，複数のタスクを実行可能な形態である．Complementorを利用する際は，まず，プラットフォームのアクセス方法を整備する必要がある．&lt;/li&gt;
      &lt;li&gt;Labor marketは，従来より短期の雇用契約を仲介する形態である．例えば，&lt;a href=&quot;https://www.elance.com/php/landing/main/login.php?redirect=&quot;&gt;Elance&lt;/a&gt;，&lt;a href=&quot;https://www.upwork.com/&quot;&gt;oDesk&lt;/a&gt;，Guru，&lt;a href=&quot;https://www.clickworker.com/&quot;&gt;Clickworker&lt;/a&gt;，&lt;a href=&quot;http://www.shorttask.com/&quot;&gt;ShortTask&lt;/a&gt;，&lt;a href=&quot;https://www.samasource.org/&quot;&gt;Samasource&lt;/a&gt;，&lt;a href=&quot;https://www.freelancer.com/?utm_expid=294858-553.v56tHEK5QEmWFNtoUUBcgw.0&quot;&gt;Freelancer&lt;/a&gt;，CloudCrowdなどがある．Labor marketの成功の鍵は，プラットフォームの整備である．Labor marketは，タスクや解決策や必要なスキルが明確なとき，有効な形態である．Labor marketは，長期雇用契約に適さないような，知的な反復作業のアウトソーシングに適している．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Giesler, M. (2012). &lt;a href=&quot;https://archive.ama.org/archive/AboutAMA/Pages/AMA%20Publications/AMA%20Journals/Journal%20of%20Marketing/TOCs/SUM_2012.6/doppelganger-brand-images.aspx&quot;&gt;How doppelgänger brand images influence the market creation process: Longitudinal insights from the rise of Botox cosmetic.&lt;/a&gt; &lt;em&gt;Journal of Marketing&lt;/em&gt;, 76(6), 55–68.
    &lt;ul&gt;
      &lt;li&gt;Doppelgänger brand image（DBI）とは，特定のブランドを貶めるイメージやストーリーの一つであり，緩やかに組織されたコミュニティで拡散される．&lt;/li&gt;
      &lt;li&gt;人気のあるブランドだけでなく，新たな機械，技術，薬等に対してもDBIが形成されることがある．&lt;/li&gt;
      &lt;li&gt;DBIに打ち勝つためには，4つのステップが有効である．Problematization，Interessement，Enrollment，そしてMobilization．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;basic-concept-product&quot;&gt;Basic concept: product&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;本講座では，特に，Product developmentとBrand managementに着目する．&lt;/li&gt;
  &lt;li&gt;製品開発では，&lt;a href=&quot;https://keikakuhiroba-mfi.com/archives/10836&quot;&gt;ステージゲート法&lt;/a&gt;が有効である．ステージゲート法では，アイデアの発想から商品化に至る工程を複数のステージに分割し，一つのステージから次のステージに移行する間に評価を行うゲートを設けて，効率的にアイデアを絞る．&lt;/li&gt;
  &lt;li&gt;近年の技術革新により，製品開発およびブランド管理の比重が，企業側から消費者側に移行しつつある．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;digital-concept-customer-co-creation&quot;&gt;Digital concept: customer co-creation&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Co-creationには，二つのステップがある．ContributionとSelectionである．Contributionにおいては，いかに消費者から協力を得るか，Selectionにおいては，いかに消費者の印象を悪くすることなくアイデアを選定するかが課題である．&lt;/li&gt;
  &lt;li&gt;Contributionにおいて消費者の協力を得る際に重要なのは，Social recognitionとFinancial rewardsである．&lt;/li&gt;
  &lt;li&gt;Contributionの方法（1.Fix，2.Open）と，Selectionの方法（a.Firm-led，b.Crowd-led）によって，Co-creationを四種類に分類できる．1.a.Submitting，1.b.Co-designing，2.a.Tinkering，2.b.Collaboration．&lt;/li&gt;
  &lt;li&gt;Tinkeringがいまいちよくわからん．&lt;/li&gt;
  &lt;li&gt;The rule of 1．消費者から集められたアイデアのうち，1%しか使い物にならない．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;case-study-local-motors&quot;&gt;Case study: local motors&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://edition.cnn.com/2013/03/12/tech/web/crowdsourced-car-sxsw/&quot;&gt;CNN，How the Internet built a $100,000 race car&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://rallyfighter.com/&quot;&gt;Rally Fighter&lt;/a&gt;は，おそらく世界で初めて，Crowdsourcingで設計された車である．Rally Fighterを製造したのは，アリゾナ州のLocal Motors社である．&lt;/li&gt;
      &lt;li&gt;ユーザはインターネットを介して，車両のデザインおよび投票に参加した．&lt;/li&gt;
      &lt;li&gt;Rally Fighterの製作期間は18ヶ月である，従来の五分の一の長さである．製作費は三百万ドルで，従来より大幅に小さい．Local Motersは，車の設計を根本から見直すことで，これを成し遂げた．例えば，六百万ドルかけてエアバックを製造する代わりに，十ドルかけて五点シートベルトを設計した．&lt;/li&gt;
      &lt;li&gt;購入後，オーナーは自らRally Fighterを組み立てる．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=OetiD8rL1KU&quot;&gt;YouTube，Local Motors Rally Fighter - Jay Leno’s Garage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;digital-concept-doppelgänger-brands&quot;&gt;Digital concept: Doppelgänger brands&lt;/h1&gt;

&lt;h1 id=&quot;exersice-ideaslegocom&quot;&gt;Exersice: Ideas.Lego.com&lt;/h1&gt;

&lt;h1 id=&quot;campus-spotlight&quot;&gt;Campus spotlight&lt;/h1&gt;

&lt;h1 id=&quot;module-1-review-quiz&quot;&gt;Module 1 review quiz&lt;/h1&gt;
</description>
        <pubDate>Wed, 08 Nov 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/11/08/digital-marketing-1</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/08/digital-marketing-1</guid>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>Jekyllで下書き記事管理</title>
        <description>&lt;p&gt;これまでは下書き記事を&lt;code class=&quot;highlighter-rouge&quot;&gt;（作成中）&lt;/code&gt;と注意書きして公開していたが，見栄えが良くないので，&lt;a href=&quot;http://jekyllrb-ja.github.io/docs/drafts/&quot;&gt;Jekyllのdrafts機能&lt;/a&gt;で一旦非公開&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;にすることにした．ただし，途中経過を公開する意味がありそうな，読書メモや受講メモはそのまま残す．&lt;/p&gt;

&lt;h1 id=&quot;jekyllのdrafts機能&quot;&gt;Jekyllのdrafts機能&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb-ja.github.io/docs/drafts/&quot;&gt;Jekyll，ドラフトを使う&lt;/a&gt;を参考にした．&lt;/p&gt;

&lt;p&gt;下書き記事は&lt;code class=&quot;highlighter-rouge&quot;&gt;title.md&lt;/code&gt;形式&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;で，ルートディレクトリに作成した&lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt;フォルダに保存する．このまま&lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll serve&lt;/code&gt;すると，&lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt;以下の記事を無視してサイトが構築される．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-10-25-jekyll-before.png&quot; alt=&quot;before&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一方，&lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll serve --drafts&lt;/code&gt;とすると，&lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt;以下の記事も含めてサイトが構築される．ここで，最終更新日が，各ドラフト記事の投稿日として処理されることに注意．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-10-25-jekyll-after.png&quot; alt=&quot;after&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以下のように記事を整理した．&lt;/p&gt;

&lt;h2 id=&quot;公開のままにした記事&quot;&gt;公開のままにした記事&lt;/h2&gt;

&lt;p&gt;未完成の読書メモや受講メモは，栞として役に立つ．&lt;code class=&quot;highlighter-rouge&quot;&gt;随時更新&lt;/code&gt;と注意書きをつけて公開することにした．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://haltaro.github.io/2017/08/10/udacity-rdb&quot;&gt;Udacity, Intro to Relational Databases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://haltaro.github.io/2017/08/13/udacity-hadoop&quot;&gt;Udacity, Intro to Hadoop and MapReduce&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://haltaro.github.io/2017/10/15/marketing&quot;&gt;コトラー，アームストロング，恩藏のマーケティング原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;_draftsに退避した記事&quot;&gt;_draftsに退避した記事&lt;/h2&gt;

&lt;p&gt;その他の下書き記事は一旦&lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt;に対比した．完成し次第，再度公開する予定．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Support vector machineの理論と実装&lt;/li&gt;
  &lt;li&gt;時系列分析技術まとめ&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;感想&quot;&gt;感想&lt;/h1&gt;

&lt;p&gt;Jekyllには，まだまだ理解していない機能がたくさんある．いつかドキュメントをちゃんと読まないと．&lt;/p&gt;

&lt;h1 id=&quot;お礼とお詫び&quot;&gt;お礼とお詫び&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://haltaro.github.io/2017/08/04/set-google-analytics&quot;&gt;Google analyticsでアクセス解析&lt;/a&gt;してみると，ごくわずかですが，本ウェブサイトを訪問してくださる方がいるみたいです．感謝です．&lt;/p&gt;

&lt;p&gt;今回のように，当方の勝手な都合で記事を削除させていただく場合もございます．何卒ご理解よろしくお願い致します．これに懲りず，たまに覗きに来ていただけると嬉しいです．&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;万が一リンクを保存していた方がいたらごめんなさい．&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-mm-dd-title.md&lt;/code&gt;形式で保存すると，エラーが出た．&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 25 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/25/jekyll-drafts</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/25/jekyll-drafts</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Windows 7でAnaconda 5.0.0</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://anaconda.org/&quot;&gt;Anaconda&lt;/a&gt;とは，&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;のライブラリパッケージである．普段はUbuntuでコーディングしているが，&lt;a href=&quot;https://haltaro.github.io/2017/10/15/jekyll-windows&quot;&gt;以前の記事&lt;/a&gt;で述べたように，しばらくWindowsで作業する必要が出てきた．そこで，Windows 7に&lt;a href=&quot;https://anaconda.org/&quot;&gt;Anaconda 5.0.0&lt;/a&gt;環境を構築した．仮想環境のactivateにハマったのでメモしておく．&lt;/p&gt;

&lt;h1 id=&quot;前提&quot;&gt;前提&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 7 Professional, Serice Pack 1, 64 bit&lt;/li&gt;
  &lt;li&gt;Anaconda 5.0.0&lt;/li&gt;
  &lt;li&gt;PowerShell 5.0.10586.117&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;手順&quot;&gt;手順&lt;/h1&gt;

&lt;h2 id=&quot;1-anacondaインストール&quot;&gt;1. Anacondaインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.anaconda.com/download/#windows&quot;&gt;Anaconda cloud&lt;/a&gt;から，Python 3.6対応の64 bit Windows向けインストーラをダウンロード．デフォルト設定でインストール．&lt;/p&gt;

&lt;h2 id=&quot;2-環境変数の設定&quot;&gt;2. 環境変数の設定&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/dddmm/items/2ccfe13d04ba30238bf3&quot;&gt;Qiita，Anaconda4.4.0 最初の設定 for Windows&lt;/a&gt;を参考に，環境変数&lt;code class=&quot;highlighter-rouge&quot;&gt;Path&lt;/code&gt;にAnacondaのパスを追加．自分の場合は，&lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Users\haltaro\Anaconda3\Scripts&lt;/code&gt;だった．&lt;/p&gt;

&lt;h2 id=&quot;3-設定ファイルの作成&quot;&gt;3. 設定ファイルの作成&lt;/h2&gt;

&lt;p&gt;PowerShellから設定ファイルを作成．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; jupyter notebook --generate-config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4-activatedeactivateパッチ&quot;&gt;4. activate，deactivateパッチ&lt;/h2&gt;

&lt;p&gt;このままだと，PowerShellから仮想環境をactivateできない．&lt;a href=&quot;https://qiita.com/ihlbbfbtr/items/097553ccd51543ee31fb&quot;&gt;Qiita - PowerShellでAnacondaの仮想環境をactivateするメモ&lt;/a&gt;を参考に，&lt;a href=&quot;https://github.com/Liquidmantis/PSCondaEnvs&quot;&gt;Liquidmantis - PSCondaEnvs&lt;/a&gt;から&lt;code class=&quot;highlighter-rouge&quot;&gt;activate.ps1&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;deactivate.ps1&lt;/code&gt;をダウンロードし，&lt;code class=&quot;highlighter-rouge&quot;&gt;activate.bat&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;deactivate.bat&lt;/code&gt;があるフォルダにコピー．自分の場合は，&lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Users\haltaro\Anaconda3\Scripts&lt;/code&gt;だった．&lt;/p&gt;

&lt;h1 id=&quot;感想&quot;&gt;感想&lt;/h1&gt;

&lt;p&gt;PowerShellは便利だけど，割とハマることが多い．早くLinux届かないかしら．&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/22/python-windonws</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/22/python-windonws</guid>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>コトラー，アームストロング，恩藏のマーケティング原理</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://amzn.asia/eGcRMag&quot;&gt;コトラー，アームストロング，恩藏のマーケティング原理&lt;/a&gt;の読書メモ．マーケティングの基本を，実例付きでわかりやすく解説してくれる名著．&lt;/p&gt;

&lt;h1 id=&quot;まとめ&quot;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;マーケティングとは，意図的に，顧客と良好な関係を築くための手法である．顧客の意識の有り様は，時代の流れに大きく左右されるため，マーケティング理論を常にアップデートし続ける必要がある．&lt;/p&gt;

&lt;h1 id=&quot;メモ&quot;&gt;メモ&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.xiv&lt;/strong&gt;：マーケティングの5ステップ．
    &lt;ol&gt;
      &lt;li&gt;顧客ニーズの理解．&lt;/li&gt;
      &lt;li&gt;顧客主導マーケティング戦略の設定．&lt;/li&gt;
      &lt;li&gt;マーケティング・プログラムの策定．&lt;/li&gt;
      &lt;li&gt;顧客リレーションシップの構築．&lt;/li&gt;
      &lt;li&gt;顧客からの価値獲得．&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.6&lt;/strong&gt;：マーケティングの究極の目的は，セリング（売り込み）を不要とすること．顧客と有益な価値交換ができる関係を築くこと．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.7&lt;/strong&gt;：ニーズとは，人間が本質的に備える性質であり，何かが欠乏している状態．ウォンツとは，ニーズが文化的背景や個人の特徴を通して具現化されたもの．需要とは，ウォンツが購買力を伴ったもの．マーケターが把握すべきなのは，ニーズ．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.10&lt;/strong&gt;：マーケティング・マネジメントとは，ターゲットとなる市場を選定し，その市場との間に収益性の高い関係を構築する技術および科学．マネジメント設計には5つの志向がある：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;生産志向&lt;/strong&gt;：顧客は価格と手に入り易さを重視するので，経営者は生産と流通の効率化に集中すべき，という考え方．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;製品志向&lt;/strong&gt;：顧客は品質と性能を重視するので，経営者は継続的な性能改善に集中すべき，という考え方．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;販売志向&lt;/strong&gt;：顧客は商品の必要性に気づきにくいため，経営者は大々的な販売活動を行うべき，という考え方．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;マーケティング志向&lt;/strong&gt;：顧客満足を提供することが重要なので，経営者は市場のニーズを的確に把握すべき，という考え方．マーケティングの方式として，顧客主導型マーケティングと，顧客誘導型マーケティングがある．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;ソサイエタル・マーケティング志向&lt;/strong&gt;： 顧客の短期的な満足だけでなく，長期的な幸福も考慮すべき，という考え方．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.13&lt;/strong&gt;：マーケティング・ミックスとは，製品（Product），価格（Price），流通（Place），およびプロモーション（Promotion）などのマーケティング実践のために用いる枠組み．4Pとも呼ばれる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.23&lt;/strong&gt;：短期的な売上だけでなく，将来的な売上も考慮すべき．カスタマー・エクイティとは，企業が抱える全顧客の生涯価値の総計である．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.37&lt;/strong&gt;：市場成長率-相対市場シェア・マトリクス．&lt;a href=&quot;http://www.darecon.com/tool/ppm1.html&quot;&gt;PPM分析&lt;/a&gt;とも呼ばれる．スター，問題児，金のなる木，負け犬．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.52&lt;/strong&gt;：&lt;a href=&quot;http://www.darecon.com/tool/swot1.html&quot;&gt;SWOT分析&lt;/a&gt;．企業の強み（Strength），弱み（Weakness），機会（Opportunity），脅威（Threat）を評価する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.53&lt;/strong&gt;：&lt;a href=&quot;http://www.nrc.co.jp/marketing/02-09.html&quot;&gt;マーケティング計画&lt;/a&gt;．エグゼクティブ・サマリー，現状分析，脅威と機会の分析，目標と課題，マーケティング戦略，行動プログラム，予算，コントロールをまとめる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.57&lt;/strong&gt;：&lt;a href=&quot;https://www.leadplus.net/blog/marketing-roi.html&quot;&gt;マーケティングROI&lt;/a&gt;とは，マーケティング投資に対する，マーケティング効果の比率．マーケティングROIの算出は難しい．最近では，マーケティング効果としてカスタマー・エクイティを用いることが増えている．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.70&lt;/strong&gt;：競合他社への&lt;a href=&quot;http://www.marketingbank.jp/special/cat07/129.php&quot;&gt;競争戦略&lt;/a&gt;として，次の三つがある：コスト・リーダーシップ戦略，差別化戦略，そして集中戦略．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.87&lt;/strong&gt;：顧客主導型マーケティング戦略の設計ステップとして，市場細分化，ターゲティング，差別化，およびポジショニングがある．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.93&lt;/strong&gt;：市場細分化のポイント．測定可能性（規模，購買力，特性が評価できること），接近可能性（セグメントに効果的に近づき，製品を提供できること），利益確保可能性（収益性があること）．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.98&lt;/strong&gt;：究極のマイクロマーケティングは，個人マーケティング．以下が参考になる．
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://jp.techcrunch.com/2015/08/16/20150814the-future-of-consumer-marketing-is-personal-2/&quot;&gt;TechCrunch，個人ユーザー単位でマーケティングできる未来が来る&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://markezine.jp/article/detail/24150&quot;&gt;MarketZine，個人単位のマーケティングを実現し、顧客体験中心のビジネスを／Adobe Summit 2016開催&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.134&lt;/strong&gt;：&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E9%A1%A7%E5%AE%A2%E9%96%A2%E4%BF%82%E7%AE%A1%E7%90%86&quot;&gt;顧客関係管理（CRM: Customer Relationship Management）&lt;/a&gt;．顧客満足度と顧客ロイヤルティの向上を通して，売上の拡大と収益性の向上を目指す経営戦略．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.141&lt;/strong&gt;：マーケターが最も知りたいのは，&lt;strong&gt;マーケティング活動に対して，消費者がどのような反応を示すか&lt;/strong&gt;．購買行動の刺激-反応モデル（S-Rモデル）では，購買者の特性と意思決定プロセスの解明がポイントとなる．消費者行動理論という枠組みで，体系化されているみたい．以下が参考になる．
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://maki-jun77.blogspot.jp/2009/08/blog-post_08.html&quot;&gt;NOTE，消費者行動理論&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.172&lt;/strong&gt;：製品は，&lt;a href=&quot;https://kotobank.jp/word/%E6%B6%88%E8%B2%BB%E8%B2%A1-23127&quot;&gt;消費財&lt;/a&gt;と&lt;a href=&quot;https://kotobank.jp/word/%E7%94%9F%E7%94%A3%E8%B2%A1-23129&quot;&gt;生産財&lt;/a&gt;から成る．消費財は，最寄品，買回品，専門品，非探索品から成る．生産財は，材料・部品，資本財，備品・サービスから成る．以下が参考になる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.182&lt;/strong&gt;：エビデンス・マネジメント．本来形のないサービスに形を与えることで，顧客に安心感を与えること．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.242&lt;/strong&gt;：商品価格の平均約20％が輸送や発送にかかる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.255&lt;/strong&gt;：グッドバリュー価格設定とは，優れた品質とサービスとの組み合わせに対して，低価格を設定すること．付加価値価格設定とは，付加価値により自社製品を差別化し，高い価格をつけること．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.265&lt;/strong&gt;：需要の&lt;a href=&quot;https://mba.globis.ac.jp/about_mba/glossary/detail-12099.html&quot;&gt;価格弾性力&lt;/a&gt;とは，価格の変動によって，ある製品の需要や供給が変化する度合いを示す数値．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.289&lt;/strong&gt;：AIDA（Attention, Interest, Desire, Action）．消費者が商品に接してから購買に至るまでの決定プロセス．以下の記事によると，ほかにも様々なモデルがあるみたい．
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://iso-labo.com/labo/AIDMA_AIDA_AISAS_AIDCA.html&quot;&gt;iso.labo，「AIDMA」、「AIDA」、「AISAS」、「AIDCA」の法則&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.309&lt;/strong&gt;：広告効果を見積もるのは，とても難しい．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.311&lt;/strong&gt;：広告の氾濫を改善するために，アドバテイメントや，ブランデッド・エンターテイメントなどが提案されている．&lt;a href=&quot;https://www.koukokutenshoku.com/app/user.php/dictionary/index?wordid=116&quot;&gt;アドバテイメント&lt;/a&gt;とは，映画やドラマなどの劇中に特定の商品を登場させ，商品の認知度や企業イメージの向上を図ること．&lt;a href=&quot;https://kotobank.jp/word/%E3%83%96%E3%83%A9%E3%83%B3%E3%83%87%E3%83%83%E3%83%89%E3%83%BB%E3%82%A8%E3%83%B3%E3%82%BF%E3%83%86%E3%82%A4%E3%83%B3%E3%83%A1%E3%83%B3%E3%83%88-22856&quot;&gt;ブランデッド・エンタテイメント&lt;/a&gt;とは，映画やTV番組，ゲームなどのエンタテイメント・コンテンツと連携したブランド・コミュニケーション．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.357&lt;/strong&gt;：紙のカタログは，未だに重要．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.374&lt;/strong&gt;：ソサイエタル・マーケティングでは，顧客の将来のニーズと，企業の現在のニーズを満足するよう行動する．一方，持続可能なマーケティングでは，顧客と企業両方の将来のニーズを満足するよう行動する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.381&lt;/strong&gt;：&lt;a href=&quot;https://kotobank.jp/word/%E3%82%B3%E3%83%B3%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%9E%E3%83%AA%E3%82%BA%E3%83%A0-67268&quot;&gt;コンシューマリズム&lt;/a&gt;．消費者運動．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.381&lt;/strong&gt;：エンバイロンメンタリズム．環境活動．&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 15 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/15/marketing</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/15/marketing</guid>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>Windows7でJekyll+GitHub Pages</title>
        <description>&lt;p&gt;船便でアメリカから送ったため，2ヶ月ほどLinuxが使えなくなった．そこで，手元のWindowsノートPC（Windows 7 Professional, Service Pack 1, 64 bit）に&lt;a href=&quot;https://jekyllrb-ja.github.io/&quot;&gt;Jekyll&lt;/a&gt;+&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;環境を構築した．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-10-15-env.png&quot; alt=&quot;env&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;環境&quot;&gt;環境&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 7 Professional, Serice Pack 1, 64 bit&lt;/li&gt;
  &lt;li&gt;PowerShell 5.0.10586.117&lt;/li&gt;
  &lt;li&gt;ATOM 1.21.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://opcdiary.net/?page_id=27065&quot;&gt;OPC Diary，私家版Git For Windowsのインストール手順&lt;/a&gt;：WindowsにおけるGit環境構築．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git for Windows&lt;/a&gt;：Windows用Git環境．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dahlbyk/posh-git&quot;&gt;posh-git&lt;/a&gt;：PowerShellでgitコマンド補完を可能にするツール．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaoriya.net/blog/2016/02/07/&quot;&gt;KaoriYa，Windowsでjekyll 3.0（github-pages）を使う&lt;/a&gt;：WindowsにおけるJekyll環境構築方法．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller&lt;/a&gt;：RubyおよびDevKitのインストール．
&lt;a href=&quot;https://qiita.com/windhorn/items/0f58866291f8273f18fb&quot;&gt;Qiita，bundle execとかdb:createとかが何をしているのか&lt;/a&gt;：&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt;の使い方について．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atom.io/&quot;&gt;ATOM&lt;/a&gt;：GitHubが開発したテキストエディタ．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atom.io/packages/line-ending-converter&quot;&gt;ATOM，Line ending converter&lt;/a&gt;：ATOMの改行コードを一括変換するパッケージ．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/nyoro_712/items/8c80e32aa49f7a2d2eaf&quot;&gt;Qiita，Atomエディタ上からファイルを新規作成する際のデフォルトの改行コードを設定する（Windows環境）&lt;/a&gt;：ATOMのデフォルト改行コード設定方法．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;手順&quot;&gt;手順&lt;/h1&gt;

&lt;h2 id=&quot;1-gitのインストール&quot;&gt;1. Gitのインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://opcdiary.net/?page_id=27065&quot;&gt;OPC Diary，私家版Git For Windowsのインストール手順&lt;/a&gt;を参考にした．&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git for Windows&lt;/a&gt;をダウンロード．&lt;/li&gt;
  &lt;li&gt;インストーラを起動し，基本的にデフォルト設定を選択．ただし，改行設定（&lt;code class=&quot;highlighter-rouge&quot;&gt;Configuring the line ending conversions&lt;/code&gt;）では，上記サイトのおすすめに従い，&lt;code class=&quot;highlighter-rouge&quot;&gt;Checkout as-is, commit as-is&lt;/code&gt;を選択．&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2-gitのグローバル設定&quot;&gt;2. Gitのグローバル設定&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Git bash&lt;/code&gt;を起動し，上記サイトを参考にグローバル設定した．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global user.name &lt;span class=&quot;s2&quot;&gt;&quot;haltaro&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global user.email &lt;span class=&quot;s2&quot;&gt;&quot;***@gmail.com&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global core.quotepath &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-gitのsshキー作成&quot;&gt;3. GitのSSHキー作成&lt;/h2&gt;

&lt;p&gt;引き続き上記サイトを参考に，SSHキーを作成した．&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;スタートメニューから&lt;code class=&quot;highlighter-rouge&quot;&gt;Git GUI&lt;/code&gt;を起動．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Help &amp;gt; Show SSH Key&lt;/code&gt;を選択．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Generate Key&lt;/code&gt;をクリックし，適当にpassphraseを入力．&lt;/li&gt;
  &lt;li&gt;公開鍵をコピーして，&lt;code class=&quot;highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;のアカウントに登録．&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-posh-gitのインストール&quot;&gt;4. posh-gitのインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dahlbyk/posh-git&quot;&gt;posh-git&lt;/a&gt;を使うと，PowerShellでgitコマンド補完してくれて便利なので，インストールした． &lt;a href=&quot;http://opcdiary.net/?page_id=27065&quot;&gt;OPC Diary，私家版Git For Windowsのインストール手順&lt;/a&gt;のPsGetを使った方法だと上手くいかなかったので，&lt;a href=&quot;https://github.com/dahlbyk/posh-git&quot;&gt;公式GitHub&lt;/a&gt;から直接クローンした．以下はその詳細である．&lt;/p&gt;

&lt;p&gt;まずは，PowerShellで以下のコマンドを打ち，&lt;a href=&quot;https://github.com/dahlbyk/posh-git&quot;&gt;公式GitHub&lt;/a&gt;からクローンする．ディレクトリはどこでも良い．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; git clone git@github.com:dahlbyk/posh-git.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;PowerShellのセキュリティ設定を変更した．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Confirm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上記ディレクトリに移動して，&lt;code class=&quot;highlighter-rouge&quot;&gt;install.ps1&lt;/code&gt;を実行した．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; .\install.ps1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;5-rubyのインストール&quot;&gt;5. Rubyのインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller&lt;/a&gt;から2017年10月15日現在の最新版である&lt;code class=&quot;highlighter-rouge&quot;&gt;Ruby 2.4.2-2(x64)&lt;/code&gt;をダウンロードした．&lt;/p&gt;

&lt;h2 id=&quot;6-devkitのインストール&quot;&gt;6. DevKitのインストール&lt;/h2&gt;

&lt;p&gt;Rubyのパッケージ管理システム&lt;code class=&quot;highlighter-rouge&quot;&gt;RubyGems&lt;/code&gt;のインストールに必要な&lt;code class=&quot;highlighter-rouge&quot;&gt;DevKit&lt;/code&gt;をインストールした．以下はその詳細である．&lt;/p&gt;

&lt;p&gt;まず，&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller&lt;/a&gt;から，&lt;code class=&quot;highlighter-rouge&quot;&gt;DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exee&lt;/code&gt;をダウンロードした．以下では&lt;code class=&quot;highlighter-rouge&quot;&gt;C:\DevKit&lt;/code&gt;に解凍したと想定する．&lt;/p&gt;

&lt;p&gt;次に，PowerShellから以下のコマンドを実行した．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; cd C:\DevKit
&amp;gt; ruby dk.rb init
&amp;gt; ruby dk.rb install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;7-関連パッケージのインストール&quot;&gt;7. 関連パッケージのインストール&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RubyGems&lt;/code&gt;を使い，&lt;code class=&quot;highlighter-rouge&quot;&gt;github-pages&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;wdm&lt;/code&gt;をインストールした．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; gem install github-pages wdm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; jekyll serve&lt;/code&gt;したらと，次のようなエラーが出た．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;WARN: Unresolved specs during Gem::Specification.reset:
      rouge (&amp;lt; 3, &amp;gt;= 1.7)
WARN: Clearing out unresolved specs.
Please report a bug if this causes problems.
C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/bundler-1.16.0.pre.3/lib/bundler/runtime.rb:315:in `check_for_activated_spec!': Y
ou have already activated public_suffix 3.0.0, but your Gemfile requires public_suffix 2.0.5. Prepending `bundle exec` t
o your command may solve this. (Gem::LoadError)
        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/bundler-1.16.0.pre.3/lib/bundler/runtime.rb:33:in `block in setup'
        from C:/Ruby24-x64/lib/ruby/2.4.0/forwardable.rb:229:in `each'
        from C:/Ruby24-x64/lib/ruby/2.4.0/forwardable.rb:229:in `each'
        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/bundler-1.16.0.pre.3/lib/bundler/runtime.rb:28:in `map'
        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/bundler-1.16.0.pre.3/lib/bundler/runtime.rb:28:in `setup'
        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/bundler-1.16.0.pre.3/lib/bundler.rb:107:in `setup'
        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/jekyll-3.6.2/lib/jekyll/plugin_manager.rb:50:in `require_from_bundle
r'
        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/jekyll-3.6.2/exe/jekyll:11:in `&amp;lt;top (required)&amp;gt;'
        from C:/Ruby24-x64/bin/jekyll:23:in `load'
        from C:/Ruby24-x64/bin/jekyll:23:in `&amp;lt;main&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;指示通り，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; bundle exec jekyll serve&lt;/code&gt;とコマンドを打ったらうまく行った．&lt;a href=&quot;https://qiita.com/windhorn/items/0f58866291f8273f18fb&quot;&gt;Qiita，bundle execとかdb:createとかが何をしているのか&lt;/a&gt;によると，&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt;を頭につけると，当該プロジェクトの&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;で指定された環境でコマンドを実行するらしい．&lt;/p&gt;

&lt;h2 id=&quot;8-atomのインストール&quot;&gt;8. ATOMのインストール&lt;/h2&gt;
&lt;p&gt;マークダウンエディタが欲しかったので，&lt;a href=&quot;https://atom.io/&quot;&gt;ATOM&lt;/a&gt;をインストールした．&lt;a href=&quot;https://atom.io/&quot;&gt;公式ページ&lt;/a&gt;からインストーラをダウンロードすれば簡単にできた．しかし…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-10-15-outline.png&quot; alt=&quot;outline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;サマリ部分に全文表示されてしまう問題が発生した．これはUnixの改行コード（&lt;code class=&quot;highlighter-rouge&quot;&gt;LF&lt;/code&gt;）とWindowsの改行コード（&lt;code class=&quot;highlighter-rouge&quot;&gt;CRLF&lt;/code&gt;）が混在していることが原因らしい．&lt;/p&gt;

&lt;h2 id=&quot;9-line-ending-converterで改行コードを一括変換&quot;&gt;9. line-ending-converterで改行コードを一括変換&lt;/h2&gt;

&lt;p&gt;ATOMの設定画面から，&lt;code class=&quot;highlighter-rouge&quot;&gt;line-ending-converter&lt;/code&gt;をインストール．&lt;code class=&quot;highlighter-rouge&quot;&gt;Packages&lt;/code&gt;&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Convert Line Endings To&lt;/code&gt;で，&lt;code class=&quot;highlighter-rouge&quot;&gt;Unix Format&lt;/code&gt;を選択すると，現在選択中のファイルの改行コードが一括変換される．&lt;/p&gt;

&lt;p&gt;詳細は&lt;a href=&quot;https://atom.io/packages/line-ending-converter&quot;&gt;こちら&lt;/a&gt;．&lt;/p&gt;

&lt;h2 id=&quot;10-line-ending-selectorで改行コード設定&quot;&gt;10. line-ending-selectorで改行コード設定&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/nyoro_712/items/8c80e32aa49f7a2d2eaf&quot;&gt;Qiita，Atomエディタ上からファイルを新規作成する際のデフォルトの改行コードを設定する（Windows環境）&lt;/a&gt;を参考に，デフォルト設定を変更．&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;ATOMの設定画面から&lt;code class=&quot;highlighter-rouge&quot;&gt;line-ending-selector&lt;/code&gt;を検索．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;line-ending-selector&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;Setting&lt;/code&gt;ボタンを押下．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Default line ending&lt;/code&gt;から，&lt;code class=&quot;highlighter-rouge&quot;&gt;LF&lt;/code&gt;を選択．&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;11-まとめ&quot;&gt;11. まとめ&lt;/h2&gt;

&lt;p&gt;下図のような環境が完成した．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-10-15-env.png&quot; alt=&quot;env&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PowerShellで&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; bundle exec jekyll serve&lt;/code&gt;して，ブラウザで&lt;code class=&quot;highlighter-rouge&quot;&gt;http://127.0.0.1:4000&lt;/code&gt;から出来栄えを確認しながら，ATOMでマークダウンを編集できる．&lt;/p&gt;

&lt;h1 id=&quot;感想&quot;&gt;感想&lt;/h1&gt;
&lt;p&gt;ATOMは本当に便利．Linuxが届いたらインストールしようと思う．&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/15/jekyll-windows</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/15/jekyll-windows</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>武井由紀子，ユーザ中心ウェブビジネス戦略</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://amzn.asia/0sBIq3B&quot;&gt;武井由紀子，三木順哉，ユーザ中心ウェブビジネス戦略&lt;/a&gt;を読んだ．ウェブビジネスにおけるユーザ理解の重要性とその方法を学んだ．&lt;/p&gt;

&lt;h1 id=&quot;まとめ&quot;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;インターネットはユーザが能動的に情報を取捨選択可能なメディアであるため，ウェブビジネスにおいては，ターゲットユーザを徹底的に理解する必要がある．ユーザ理解のためのツールとして，ユーザ行動パターン検証ツール（アクセスログ解析等）と，ユーザ行動理由検証ツール（ユーザ行動観察調査等）がある．両者の特徴を理解して，使い分けることが重要である．&lt;/p&gt;

&lt;h1 id=&quot;メモ&quot;&gt;メモ&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.10&lt;/strong&gt;：いかなる製品やサービスも，まずは事業の目的や市場，ターゲット顧客，収益性といった観点から検討が始まる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.12&lt;/strong&gt;：本書は二部構成．一部は理論編，二部は実践編．二部は主にウェブマスター向けの話なので，一部を中心に読む．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.19&lt;/strong&gt;：ウェブビジネス成功事例の共通点として，下記4点があるが，もっとも重要なのは1である：
    &lt;ol&gt;
      &lt;li&gt;サイトの顧客（ユーザ）を徹底的に知っている．&lt;/li&gt;
      &lt;li&gt;ユーザを知った上でサイト上でのコミュニケーションを設計している．&lt;/li&gt;
      &lt;li&gt;事前に仮説検証をしている．&lt;/li&gt;
      &lt;li&gt;事後に仮説検証をしている．&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.25&lt;/strong&gt;：インターネットによりメディアの民主化が起こった．企業から発信される情報の信頼性が低下する一方で，個人から発信される情報の信頼性が増大した．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.32&lt;/strong&gt;：論理武装した消費者に対応するためには，ユーザの期待に応えているか，が最も重要．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.37&lt;/strong&gt;：ユーザ利用時のインターネットの特性として，以下の5つがある：前のめり，斜め読み，新鮮，遠慮不要，比較可能．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.45&lt;/strong&gt;：ユーザ中心設計のプロセス：サイトの目的と目標，ターゲットユーザ，コミュニケーションシナリオ，ユーザ視点の検証作業．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.51&lt;/strong&gt;：ウォーターフォール型ではなく，スパイラル型でサイト設計を行う．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.55&lt;/strong&gt;：ユーザの過去の経験やサイト内外での体験まで想定して，コミュニケーションシナリオを構築する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.65&lt;/strong&gt;：ウェブサイトによるプロモーションと相性が良いのは，比較に耐えるサービスか，そもそも比較できないサービス．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.81&lt;/strong&gt;：ユーザ行動パターン検証ツールと，ユーザ行動理由検証ツールを使い分ける必要がある．前者は，例えばアクセスログ解析．後者は，例えばユーザ行動観察調査．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.85&lt;/strong&gt;：ユーザの意見ではなく，行動を重視する．往々にして，ユーザの意見は正確でない．&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 14 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/14/web-buisiness</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/14/web-buisiness</guid>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>Udacity, Intro to Hadoop and MapReduce</title>
        <description>&lt;p&gt;&lt;strong&gt;随時更新&lt;/strong&gt;：&lt;a href=&quot;https://www.udacity.com/course/intro-to-hadoop-and-mapreduce--ud617&quot;&gt;Udacity, Intro to Hadoop and MapReduce&lt;/a&gt;の受講メモ．6部構成の無料講座．全ての動画に日本語訳があり，とても助かる．&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/DEQNknALf_8?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;1-big-data&quot;&gt;1. Big Data&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Big Dataとは，一つのマシンでは処理しきれないほど大量のデータである．&lt;/li&gt;
  &lt;li&gt;Big Dataにおける課題は主に以下の２つ：
    &lt;ul&gt;
      &lt;li&gt;データが高速に生成されること．&lt;/li&gt;
      &lt;li&gt;データが異なるソースから多様なフォーマットで生成されること．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;データの性質を表現する三つのV：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Volume&lt;/strong&gt;（量）：データを保存するだけではなく，処理することも考える必要がある．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Variety&lt;/strong&gt;（多様性）：非構造データや半構造データが増加しており，従来のデータベースへは保管が難しい．もし非構造データをそのまま保存できれば，後で活用できるかもしれない．&lt;code class=&quot;highlighter-rouge&quot;&gt;Hadoop&lt;/code&gt;では，データフォーマットによらず，そのまま保存できる．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Velocity&lt;/strong&gt;（速度）：処理速度が速ければ速いほど，より多くのビジネスチャンスが生まれる．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hadoopの由来は，製作者の子供のおもちゃ．&lt;/li&gt;
  &lt;li&gt;Hadoopの技術的コアは２つ：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;HDFS&lt;/strong&gt;（Hadoop distributed file system）による分散ファイル保存．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;MapReduce&lt;/strong&gt;によるデータ処理．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hadoopでは，データの保存及び処理が，クラスタ毎に行われる．&lt;/li&gt;
  &lt;li&gt;Hadoop ecosystem：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Pig&lt;/strong&gt;，&lt;strong&gt;Hive&lt;/strong&gt;：MapReduceのハイレベルインターフェース．SQLチックに使える．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Impala&lt;/strong&gt;：HDFSへの低レベルインターフェース．PigやHiveより高速．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Sqoop&lt;/strong&gt;，&lt;strong&gt;Flume&lt;/strong&gt;：他のデータベース上のデータを，クラスタとして保存できる．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;HBase&lt;/strong&gt;：HDFS上のリアルタイムデータベース．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Hue&lt;/strong&gt;：GUI．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Oozie&lt;/strong&gt;：ワークフロー管理ツール．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Mahout&lt;/strong&gt;：機械学習ライブラリ．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Cloudera&lt;/strong&gt;：環境構築ツール．上記のソフトウェアをまとめてインストールできる．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-hdfs-and-mapreduce&quot;&gt;2. HDFS and MapReduce&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;HDFSでは，データを64Mbyteの&lt;strong&gt;ブロック&lt;/strong&gt;に分割し，それぞれ別のマシンに保存する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ネームノード&lt;/strong&gt;は，どのブロックがどのマシンに保存されているかという&lt;strong&gt;メタデータ&lt;/strong&gt;を管理する．&lt;/li&gt;
  &lt;li&gt;冗長性のため，Hadoopはブロックを三回複製する．またネームノードの複製も用意する．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hadoop fs -ls&lt;/code&gt;などで，HDFSにアクセスできる．&lt;code class=&quot;highlighter-rouge&quot;&gt;-ls&lt;/code&gt;の部分は，UNIXのファイルシステムコマンドを利用可能．&lt;/li&gt;
  &lt;li&gt;ハッシュテーブルは，Big Data適用時に，処理時間とメモリ消費という課題があった．&lt;/li&gt;
  &lt;li&gt;MapReduceのまとめ：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Map&lt;/strong&gt;：小さく分割されたデータを，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;key, value&amp;gt;&lt;/code&gt;形式で保存し，同一&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;でまとめる．Mapperの出力を中間レコード（Intermediate records）と呼ぶ．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Shuffle and sort&lt;/strong&gt;：中間レコードをReduceに渡し，&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;でソートする．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Reduce&lt;/strong&gt;：&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;毎に処理し，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;key, values&amp;gt;&lt;/code&gt;リストを作成する．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;最終結果をソートするためには，単独のReducerを使うか，別途処理を行うか．&lt;/li&gt;
  &lt;li&gt;各Reducerが受け取る&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;の数は，事前にはわからない．等分されるとは限らない．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Job tracker&lt;/strong&gt;が，MapperとReducerにジョブを割り当てる．&lt;/li&gt;
  &lt;li&gt;各デーモンは，&lt;strong&gt;Task tracker&lt;/strong&gt;を持つ．&lt;/li&gt;
  &lt;li&gt;HadoopではJavaが使われるが，Pythonを使うこともできる．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hs {mapper script} {reducer script} {input_file} {output directory}&lt;/code&gt;で実行できる．ただし，&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;が既に存在する場合，エラーが返されるので注意．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hadoop fs -put&lt;/code&gt;でデータをHDFSに保存し，&lt;code class=&quot;highlighter-rouge&quot;&gt;hadoop fs -get&lt;/code&gt;で取り出す．&lt;/li&gt;
  &lt;li&gt;仮想マシンで実際にHadoopを動かす．以下，参考：
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1v0zGBZ6EHap-Smsr3x3sGGpDW-54m82kDpPKC2M6uiY/pub&quot;&gt;インストールと初期設定&lt;/a&gt;：ダブルクリックで&lt;code class=&quot;highlighter-rouge&quot;&gt;.zip&lt;/code&gt;を解凍したらうまくいかなかった．コマンドラインで&lt;code class=&quot;highlighter-rouge&quot;&gt;unzip&lt;/code&gt;で解凍した．&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1MZ_rNxJhR4HCU1qJ2-w7xlk2MTHVqa9lnl_uj-zRkzk/pub&quot;&gt;ファイル共有&lt;/a&gt;：うちの環境では&lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.0.9&lt;/code&gt;だった．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/l0I_2nyPNZM?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/d5TZ_2I7dwE?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;技術的な詳細は，&lt;a href=&quot;http://go.cloudera.com/udacity-lesson-2&quot;&gt;Chapter 6 of Tom White’s essential text, Hadoop: The Definitive Guide&lt;/a&gt;を参照．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-mapreduce-code&quot;&gt;3. MapReduce Code&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Hadoop streaming&lt;/strong&gt;により，どんな言語でも処理を書くことができる．&lt;/li&gt;
  &lt;li&gt;MapperおよびReducerには，&lt;code class=&quot;highlighter-rouge&quot;&gt;sys.stdin&lt;/code&gt;形式でデータを入力する．&lt;code class=&quot;highlighter-rouge&quot;&gt;for line in sys.stdin:&lt;/code&gt;以下に処理を書く．&lt;/li&gt;
  &lt;li&gt;MapperおよびReducerは，処理結果を&lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt;で標準出力する．&lt;/li&gt;
  &lt;li&gt;シェルで&lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./mapper.py&lt;/code&gt;で実行すれば，Hadoop外でMapperの動作を検証できる．Reducerについても同様．さらに，以下のコマンドで全ての処理を検証可能．&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat testfile | ./mapper.py | sort | ./reducer.py

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;詳細は，以下の動画がとてもわかりやすい．&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/MYo8EZwDRUA?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;4-project&quot;&gt;4. Project&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;1-1. 全店舗におけるカテゴリー毎の売上額を求めよ．&lt;/li&gt;
  &lt;li&gt;1-2.&lt;/li&gt;
  &lt;li&gt;1-3.&lt;/li&gt;
  &lt;li&gt;2-1.&lt;/li&gt;
  &lt;li&gt;2-2.&lt;/li&gt;
  &lt;li&gt;2-2.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;5-mapreduce-design-patterns&quot;&gt;5. MapReduce Design Patterns&lt;/h1&gt;

&lt;h1 id=&quot;6-project-prep&quot;&gt;6. Project Prep&lt;/h1&gt;
</description>
        <pubDate>Sun, 13 Aug 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/08/13/udacity-hadoop</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/13/udacity-hadoop</guid>
        
        
        <category>data science</category>
        
      </item>
    
      <item>
        <title>Udacity, Intro to Relational Databases</title>
        <description>&lt;p&gt;&lt;strong&gt;随時更新&lt;/strong&gt;：&lt;a href=&quot;https://www.udacity.com/course/intro-to-relational-databases--ud197&quot;&gt;Udacity, Intro to Relational Databases&lt;/a&gt;の受講メモ．5部構成の無料講座．&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/jyju2P-7hPA?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;1-data-and-tables&quot;&gt;1. Data and Tables&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Databaseは，同時に複数の人が編集可能．これが，普通のファイルと異なる点．&lt;/li&gt;
  &lt;li&gt;Tableは，headerとbodyからなる．headerは，table nameと，column nameと，column typeからなる．bodyは，rowsとcolumnsからなる．&lt;/li&gt;
  &lt;li&gt;複数の行に跨る演算をaggregationと呼ぶ．SQLで使えるaggregationの代表的なものとして，count，avg，max，min，sumなどがある．&lt;/li&gt;
  &lt;li&gt;codeからdatabaseに&lt;code class=&quot;highlighter-rouge&quot;&gt;query&lt;/code&gt;を出すと，&lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt;を返される．&lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt;は，原則的にTable形式．&lt;/li&gt;
  &lt;li&gt;Database中でデータの唯一性を担保するために，idを与えることがある．このように識別に用いられるcolumnを&lt;code class=&quot;highlighter-rouge&quot;&gt;primary key&lt;/code&gt;と呼ぶ．&lt;/li&gt;
  &lt;li&gt;複数の情報を持つオブジェクトを定義するよりは，複数のTableで管理したほうが効率的．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-elements-of-sql&quot;&gt;2. Elements of SQL&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;SQLのtypeとして，&lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;などがある．&lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;および&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;は，&lt;code class=&quot;highlighter-rouge&quot;&gt;'2017-08-10'&lt;/code&gt;のようにシングルクォートで囲む．主なSQLのtypeは以下．&lt;/li&gt;
  &lt;li&gt;Text and string types
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;：長さに制限のない文字列．Pythonの&lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt;に相当．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;char(n)&lt;/code&gt;：長さが&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;の文字列．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;varchar(n)&lt;/code&gt;：長さが最大&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;の文字列．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Numeric types
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;：整数型．Pythonの&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;に相当．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;real&lt;/code&gt;：浮動小数点型．Pythonの&lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;に相当．精度は小数第6位．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;double precision&lt;/code&gt;：倍精度小数点．精度は小数第15位．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;decimal&lt;/code&gt;：正確な小数型（？）．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Date and time types
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;：日付型．年，月，日．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;：時刻型．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt;：&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;および&lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;基本構文：&lt;strong&gt;select&lt;/strong&gt; &lt;em&gt;columns&lt;/em&gt; &lt;strong&gt;from&lt;/strong&gt; &lt;em&gt;tables&lt;/em&gt; &lt;strong&gt;where&lt;/strong&gt; &lt;em&gt;condition&lt;/em&gt;;&lt;/li&gt;
  &lt;li&gt;出力数に制限を設けるとき：&lt;strong&gt;limit&lt;/strong&gt; &lt;em&gt;count&lt;/em&gt; [&lt;strong&gt;offset&lt;/strong&gt; &lt;em&gt;skip&lt;/em&gt;]&lt;/li&gt;
  &lt;li&gt;並び替えるとき：&lt;strong&gt;order by&lt;/strong&gt; &lt;em&gt;columns&lt;/em&gt; [&lt;strong&gt;desc&lt;/strong&gt;]&lt;/li&gt;
  &lt;li&gt;結果をまとめるとき：&lt;strong&gt;group by&lt;/strong&gt; &lt;em&gt;columns&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;例えば，同じ名前の動物の数を数えるとき：&lt;code class=&quot;highlighter-rouge&quot;&gt;select name, count(*) as num from animals group by name;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pythonでも同様のことはできる．違いはスピードとメモリ．Databaseは格段に高速に，かつメモリ消費を抑えて実行できる．&lt;/li&gt;
  &lt;li&gt;新たに要素を追加するとき：&lt;strong&gt;insert into&lt;/strong&gt; &lt;em&gt;table&lt;/em&gt; &lt;strong&gt;values (&lt;/strong&gt; &lt;em&gt;val1, val2, …&lt;/em&gt; &lt;strong&gt;)&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;ただし，特定の列を指定して追加するときは：&lt;strong&gt;insert into&lt;/strong&gt; &lt;em&gt;table&lt;/em&gt;(&lt;em&gt;column1, column2, …&lt;/em&gt;) &lt;strong&gt;values (&lt;/strong&gt; &lt;em&gt;val1, val2, …&lt;/em&gt; &lt;strong&gt;)&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;Databaseを結合するとき：&lt;em&gt;T&lt;/em&gt; &lt;strong&gt;join&lt;/strong&gt; &lt;em&gt;S&lt;/em&gt; &lt;strong&gt;on&lt;/strong&gt; &lt;em&gt;T.color = S.paint&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;例えば，&lt;code class=&quot;highlighter-rouge&quot;&gt;fish&lt;/code&gt;を食べる動物の名前を抽出したとき：&lt;code class=&quot;highlighter-rouge&quot;&gt;select name from animals join diet on animals.species=diet.species where food='fish';&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;where&lt;/code&gt;は&lt;code class=&quot;highlighter-rouge&quot;&gt;group by&lt;/code&gt;の前に適用されるが，&lt;code class=&quot;highlighter-rouge&quot;&gt;having&lt;/code&gt;は&lt;code class=&quot;highlighter-rouge&quot;&gt;group by&lt;/code&gt;の後に適用される．&lt;/li&gt;
  &lt;li&gt;Lesson 3に向けて，&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt;と&lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;で環境を構築．Vagrantってこんな便利だったのか．
    &lt;ul&gt;
      &lt;li&gt;仮想環境構築：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ vagrant up&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;ログイン：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ vagrant ssh&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;ファイル共有は&lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant&lt;/code&gt;ディレクトリ．&lt;/li&gt;
      &lt;li&gt;PostgreSQLの起動：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ psql&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;ログアウト：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ exit&lt;/code&gt;あるいは&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl-D&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;VagrantとDockerの違いについては，以下が参考になった．
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://qiita.com/hidekuro/items/fc12344d36d996198e96&quot;&gt;VagrantとDockerについて名前しか知らなかったので試した&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://acchi-muite-hoi.hatenablog.com/entry/2016/05/30/041618&quot;&gt;dockerとvagrantの違い言える？新人エンジニアでも分かった気になれる俺流まとめ&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-python-db-api&quot;&gt;3. Python DB-API&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;PythonからDatabaseを叩く際，DB-APIを用いる．DB-APIはPythonの組み込みモジュール．Databaseに応じて，DB-APIモジュールは異なる：SQLiteは&lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite3&lt;/code&gt;，PostgreSQLは&lt;code class=&quot;highlighter-rouge&quot;&gt;psycopg2&lt;/code&gt;，ODBCは&lt;code class=&quot;highlighter-rouge&quot;&gt;pyodbc&lt;/code&gt;，MySQLは&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.connector&lt;/code&gt;など．&lt;/li&gt;
  &lt;li&gt;例えば，次のようなPythonコードを書く．&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/92a4506f6b0f3461b217934860490173.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;Databaseにおける追加や削除を行った後は，必ず&lt;code class=&quot;highlighter-rouge&quot;&gt;Connection.commit()&lt;/code&gt;する．&lt;/li&gt;
  &lt;li&gt;PostgreSQLを使って，簡易なForumサイトを作成する．実験環境を確認．
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ vagrant up&lt;/code&gt;で仮想環境を立ち上げ．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ vagrant ssh&lt;/code&gt;で仮想環境にログイン．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ cd /vagrant/forum&lt;/code&gt;で当該ディレクトリに移動．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ python form.py&lt;/code&gt;でForumサーバを起動．ブラウザで&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8000&lt;/code&gt;にアクセス．適当にMessageを投稿してみる．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+C&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;$ python form.py&lt;/code&gt;で再起動すると，先ほど投稿したMessageが消えていることがわかる．以降では，Messageを保存する機能をPostgreSQLで実装する．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;4-deeper-into-sql&quot;&gt;4. Deeper into SQL&lt;/h1&gt;

&lt;h1 id=&quot;5-tournament-database&quot;&gt;5. Tournament Database&lt;/h1&gt;
</description>
        <pubDate>Thu, 10 Aug 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/08/10/udacity-rdb</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/10/udacity-rdb</guid>
        
        
        <category>data science</category>
        
      </item>
    
  </channel>
</rss>
