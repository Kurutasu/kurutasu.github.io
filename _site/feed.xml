<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memotaro</title>
    <description>network engineering，algorithmic trading，machine learningに関する技術メモを書きます．
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 25 Oct 2017 11:39:31 +0900</pubDate>
    <lastBuildDate>Wed, 25 Oct 2017 11:39:31 +0900</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>Jekyllで下書き記事管理</title>
        <description>&lt;p&gt;これまでは下書き記事を，&lt;code class=&quot;highlighter-rouge&quot;&gt;（作成中）&lt;/code&gt;と注意書きして公開していたが，見苦しいので，&lt;a href=&quot;http://jekyllrb-ja.github.io/docs/drafts/&quot;&gt;Jekyllのdrafts機能&lt;/a&gt;で一旦非公開&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;にすることにした．ただし，途中経過を公開する意味がありそうな，読書メモや受講メモはそのまま残す．&lt;/p&gt;

&lt;h1 id=&quot;jekyllのdrafts機能&quot;&gt;Jekyllのdrafts機能&lt;/h1&gt;

&lt;h1 id=&quot;公開のままにした記事&quot;&gt;公開のままにした記事&lt;/h1&gt;

&lt;p&gt;未完成の読書メモや受講メモは，栞として役に立つ．&lt;code class=&quot;highlighter-rouge&quot;&gt;（随時更新）&lt;/code&gt;と注意書きをつけて公開することにした．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://haltaro.github.io/2017/08/10/udacity-rdb&quot;&gt;Udacity, Intro to Relational Databases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://haltaro.github.io/2017/08/10/udacity-hadoop&quot;&gt;Udacity, Intro to Hadoop and MapReduce&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://haltaro.github.io/2017/10/15/marketing&quot;&gt;コトラー，アームストロング，恩藏のマーケティング原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;_draftsに退避した記事&quot;&gt;_draftsに退避した記事&lt;/h1&gt;

&lt;p&gt;その他の下書き記事は一旦&lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt;に対比した．完成し次第，再度公開する．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Support vector machineの理論と実装&lt;/li&gt;
  &lt;li&gt;時系列分析技術まとめ&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;お礼とお詫び&quot;&gt;お礼とお詫び&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://haltaro.github.io/2017/08/04/set-google-analytics&quot;&gt;Google analyticsでアクセス解析&lt;/a&gt;してみると，ごくわずかですが，本ウェブサイトを訪問してくださる方がいるみたいです．感謝です．&lt;/p&gt;

&lt;p&gt;今回のように，当方の勝手な都合で記事を削除させていただく場合もございます．何卒ご理解よろしくお願い致します．これに懲りず，たまに覗きに来ていただけると嬉しいです．&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;万が一リンクを保存していた方がいたらごめんなさい．&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 25 Oct 2017 11:38:13 +0900</pubDate>
        <link>http://localhost:4000/2017/10/25/jekyll-drafts</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/25/jekyll-drafts</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>時系列分析技術まとめ</title>
        <description>&lt;p&gt;（作成中）時系列分析技術をまとめる．時系列解析と呼ばれることもあるが，本記事では時系列分析で統一する．時系列分析とは，時間軸に沿って変化している現象を分析すること．計量経済学や制御工学等，多様な学術領域で研究が進められている．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-08-16-time.jpg&quot; alt=&quot;time&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-計量時系列分析&quot;&gt;1. 計量時系列分析&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tjo.hatenablog.com/entry/2013/07/12/184704&quot;&gt;六本木で働くデータサイエンティストのブログ，Rで計量時系列分析：AR, MA, ARMA, ARIMAモデル, 予測&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1a-ar&quot;&gt;1.a AR&lt;/h2&gt;

&lt;h2 id=&quot;1b-ma&quot;&gt;1.b MA&lt;/h2&gt;

&lt;h2 id=&quot;1c-arma&quot;&gt;1.c ARMA&lt;/h2&gt;

&lt;h2 id=&quot;1d-arima&quot;&gt;1.d ARIMA&lt;/h2&gt;

&lt;h1 id=&quot;2-状態空間モデル&quot;&gt;2. 状態空間モデル&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mathwords.net/zyotaikukan&quot;&gt;具体例で学ぶ数学，状態空間モデルの意味と4つの分類（線形性、正規性、時変性、連続性）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.asia/aGb1uXY&quot;&gt;C.M.ビショップ，パターン認識と機械学習&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2a-隠れマルコフモデル&quot;&gt;2.a 隠れマルコフモデル&lt;/h2&gt;

&lt;h2 id=&quot;2b-線形動的システム&quot;&gt;2.b 線形動的システム&lt;/h2&gt;

&lt;h2 id=&quot;2c-非線形動的システム&quot;&gt;2.c 非線形動的システム&lt;/h2&gt;

&lt;h2 id=&quot;2d-カルマンフィルタ&quot;&gt;2.d カルマンフィルタ&lt;/h2&gt;

&lt;h1 id=&quot;3-neural-network-not-deep&quot;&gt;3. Neural Network (Not deep)&lt;/h1&gt;

&lt;h1 id=&quot;4-deep-neural-network&quot;&gt;4. Deep Neural Network&lt;/h1&gt;

&lt;h2 id=&quot;41-lstm&quot;&gt;4.1 LSTM&lt;/h2&gt;

&lt;h2 id=&quot;42-qrnn&quot;&gt;4.2 QRNN&lt;/h2&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tjo.hatenablog.com/entry/2013/07/12/184704&quot;&gt;六本木で働くデータサイエンティストのブログ，Rで計量時系列分析：AR, MA, ARMA, ARIMAモデル, 予測&lt;/a&gt;：計量時系列分析について．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mathwords.net/zyotaikukan&quot;&gt;具体例で学ぶ数学，状態空間モデルの意味と4つの分類（線形性、正規性、時変性、連続性）&lt;/a&gt;：状態空間モデルについて．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.asia/aGb1uXY&quot;&gt;C.M.ビショップ，パターン認識と機械学習&lt;/a&gt;：隠れマルコフモデル，線形動的システムについて．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sciencedirect.com/science/article/pii/S0031320305001305&quot;&gt;T. Warren Liao, Clustering of time series data—a survey, Pattern Recognition, Volume 38, Issue 11, 2005, Pages 1857-1874, ISSN 0031-3203&lt;/a&gt;：時系列データのクラスタリングについて．&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Oct 2017 08:15:08 +0900</pubDate>
        <link>http://localhost:4000/2017/10/25/time-series</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/25/time-series</guid>
        
        
        <category>machine learning</category>
        
      </item>
    
      <item>
        <title>Support vector machineの理論と実装</title>
        <description>&lt;p&gt;（作成中）&lt;a href=&quot;https://www.amazon.co.jp/%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E8%AA%8D%E8%AD%98%E3%81%A8%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92-%E4%B8%8B-%E3%83%99%E3%82%A4%E3%82%BA%E7%90%86%E8%AB%96%E3%81%AB%E3%82%88%E3%82%8B%E7%B5%B1%E8%A8%88%E7%9A%84%E4%BA%88%E6%B8%AC-C-M-%E3%83%93%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97/dp/4621061240/ref=pd_sim_14_1?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=75MTQH13HRTSXQWGQARY&quot;&gt;パターン認識と機械学習&lt;/a&gt;でsupport vector machine（SVM）について復習した．SVMは疎な解を持つ識別関数の一種であり，クラス分類や回帰など，様々な応用が可能．モデル学習が二次計画問題に帰着するため，局所解=最適解という扱いやすい性質を持つ．&lt;/p&gt;

&lt;h1 id=&quot;1-理論&quot;&gt;1. 理論&lt;/h1&gt;

&lt;h2 id=&quot;1a-コンセプト&quot;&gt;1.a コンセプト&lt;/h2&gt;

&lt;h2 id=&quot;1b-最大マージン分類器&quot;&gt;1.b 最大マージン分類器&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{align*}
y \left( \mathbf{x} \right) = \mathbf{w}^{T} \mathbf{\phi}(\mathbf{x}) + b \tag{1}
\end{align*}&lt;/script&gt;

&lt;h2 id=&quot;1c-ラグランジュ乗数法&quot;&gt;1.c ラグランジュ乗数法&lt;/h2&gt;

&lt;h2 id=&quot;1d-カーネルトリック&quot;&gt;1.d カーネルトリック&lt;/h2&gt;

&lt;h1 id=&quot;2-実装&quot;&gt;2. 実装&lt;/h1&gt;

&lt;p&gt;学習目的であれば，ソルバで二次計画法を解いても良さそう．実務目的であれば，無難にライブラリを使ったほうが良さそう．&lt;/p&gt;

&lt;h2 id=&quot;2a-二次計画法ソルバ&quot;&gt;2.a 二次計画法ソルバ&lt;/h2&gt;

&lt;p&gt;Pythonの二次計画法ソルバとしては，&lt;a href=&quot;http://cvxopt.org/&quot;&gt;CVXOPT&lt;/a&gt;が人気．実装するとしたら，以下のようになる．&lt;/p&gt;

&lt;h2 id=&quot;2b-svmライブラリ&quot;&gt;2.b SVMライブラリ&lt;/h2&gt;

&lt;p&gt;SVMライブラリとしては，&lt;a href=&quot;http://scikit-learn.org/stable/index.html&quot;&gt;scikit-learn&lt;/a&gt;の&lt;a href=&quot;http://scikit-learn.org/stable/modules/classes.html#module-sklearn.svm&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sklearn.svm&lt;/code&gt;&lt;/a&gt;モジュールが人気．上記と同じ機能を実装するとしたら，以下のようになる．&lt;/p&gt;

&lt;h1 id=&quot;3-実験&quot;&gt;3. 実験&lt;/h1&gt;

&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.co.jp/%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E8%AA%8D%E8%AD%98%E3%81%A8%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92-%E4%B8%8B-%E3%83%99%E3%82%A4%E3%82%BA%E7%90%86%E8%AB%96%E3%81%AB%E3%82%88%E3%82%8B%E7%B5%B1%E8%A8%88%E7%9A%84%E4%BA%88%E6%B8%AC-C-M-%E3%83%93%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97/dp/4621061240/ref=pd_lpo_sbs_14_img_2?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=2J0S7A4J37ASEZ0JMGQW&quot;&gt;C.M.ビショップ，パターン認識と機械学習 下&lt;/a&gt;：SVMが登場するのは下巻．ただし，ラグランジュ乗数法の詳細は上巻の付録にある．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/classes.html#module-sklearn.svm&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sklearn.svm&lt;/code&gt;: Support Vector Machines&lt;/a&gt;：便利すぎるSVMモジュール．&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Oct 2017 08:13:53 +0900</pubDate>
        <link>http://localhost:4000/2017/10/25/support-vector-machine</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/25/support-vector-machine</guid>
        
        
        <category>machine learning</category>
        
      </item>
    
      <item>
        <title>What3Wordsを日本語化</title>
        <description>&lt;p&gt;（作成中）&lt;a href=&quot;https://what3words.com/&quot;&gt;What3Words&lt;/a&gt;とは，新しい住所定義サービスである．本サービスで定義された住所は，従来より詳細（3m四方のグリッド単位！）で，かつ覚えやすい（わずか三単語！）．&lt;a href=&quot;https://docs.what3words.com/api/v2/&quot;&gt;API&lt;/a&gt;を公開しているが，2017年10月24日時点で日本語未対応っぽい．そこで，本記事ではWhat3Wordsを日本語化して遊ぶ．&lt;/p&gt;

&lt;div style=&quot;max-width:854px&quot;&gt;&lt;div style=&quot;position:relative;height:0;padding-bottom:56.25%&quot;&gt;&lt;iframe src=&quot;https://embed.ted.com/talks/chris_sheldrick_a_precise_three_word_address_for_every_place_on_earth&quot; width=&quot;854&quot; height=&quot;480&quot; style=&quot;position:absolute;left:0;top:0;width:100%;height:100%&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上のビデオは，このサービスを知るきっかけになった&lt;a href=&quot;https://www.ted.com/talks/chris_sheldrick_a_precise_three_word_address_for_every_place_on_earth?utm_campaign=tedspread--a&amp;amp;utm_medium=referral&amp;amp;utm_source=tedcomshare&quot;&gt;TED talk&lt;/a&gt;．&lt;/p&gt;

&lt;h1 id=&quot;1-what3words&quot;&gt;1. What3Words&lt;/h1&gt;

&lt;h1 id=&quot;2-api&quot;&gt;2. API&lt;/h1&gt;

&lt;h1 id=&quot;3-日本語化&quot;&gt;3. 日本語化&lt;/h1&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://what3words.com/&quot;&gt;What3Words&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ted.com/talks/chris_sheldrick_a_precise_three_word_address_for_every_place_on_earth?utm_campaign=tedspread--a&amp;amp;utm_medium=referral&amp;amp;utm_source=tedcomshare&quot;&gt;TED，A precise, three-word address for every place on earth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gigazine.net/news/20160626-mongolia-three-word-address&quot;&gt;Gigazine，全ての住所を単語3つの組み合わせだけで表現する「What3Words」がモンゴルで導入へ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/hfu/items/895141107aa4eb693f66&quot;&gt;Qiita，覚えやすい位置表現（what3words）による行動支援の可能性 / Possibilities of the what3words for disaster response&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 24 Oct 2017 22:12:30 +0900</pubDate>
        <link>http://localhost:4000/2017/10/24/what3words-jp</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/24/what3words-jp</guid>
        
        
        <category>geo</category>
        
      </item>
    
      <item>
        <title>Windows 7でAnaconda 5.0.0</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://anaconda.org/&quot;&gt;Anaconda&lt;/a&gt;とは，&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;のライブラリパッケージである．普段はUbuntuでコーディングしているが，&lt;a href=&quot;https://haltaro.github.io/2017/10/15/jekyll-windows&quot;&gt;以前の記事&lt;/a&gt;で述べたように，しばらくWindowsで作業する必要が出てきた．そこで，Windows 7に&lt;a href=&quot;https://anaconda.org/&quot;&gt;Anaconda 5.0.0&lt;/a&gt;環境を構築した．仮想環境のactivateにハマったのでメモしておく．&lt;/p&gt;

&lt;h1 id=&quot;前提&quot;&gt;前提&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 7 Professional, Serice Pack 1, 64 bit&lt;/li&gt;
  &lt;li&gt;Anaconda 5.0.0&lt;/li&gt;
  &lt;li&gt;PowerShell 5.0.10586.117&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;手順&quot;&gt;手順&lt;/h1&gt;

&lt;h2 id=&quot;1-anacondaインストール&quot;&gt;1. Anacondaインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.anaconda.com/download/#windows&quot;&gt;Anaconda cloud&lt;/a&gt;から，Python 3.6対応の64 bit Windows向けインストーラをダウンロード．デフォルト設定でインストール．&lt;/p&gt;

&lt;h2 id=&quot;2-環境変数の設定&quot;&gt;2. 環境変数の設定&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/dddmm/items/2ccfe13d04ba30238bf3&quot;&gt;Qiita，Anaconda4.4.0 最初の設定 for Windows&lt;/a&gt;を参考に，環境変数&lt;code class=&quot;highlighter-rouge&quot;&gt;Path&lt;/code&gt;にAnacondaのパスを追加．自分の場合は，&lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Users\haltaro\Anaconda3\Scripts&lt;/code&gt;だった．&lt;/p&gt;

&lt;h2 id=&quot;3-設定ファイルの作成&quot;&gt;3. 設定ファイルの作成&lt;/h2&gt;

&lt;p&gt;PowerShellから設定ファイルを作成．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; jupyter notebook --generate-config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;4-activatedeactivateパッチ&quot;&gt;4. activate，deactivateパッチ&lt;/h2&gt;

&lt;p&gt;このままだと，PowerShellから仮想環境をactivateできない．&lt;a href=&quot;https://qiita.com/ihlbbfbtr/items/097553ccd51543ee31fb&quot;&gt;Qiita - PowerShellでAnacondaの仮想環境をactivateするメモ&lt;/a&gt;を参考に，&lt;a href=&quot;https://github.com/Liquidmantis/PSCondaEnvs&quot;&gt;Liquidmantis - PSCondaEnvs&lt;/a&gt;から&lt;code class=&quot;highlighter-rouge&quot;&gt;activate.ps1&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;deactivate.ps1&lt;/code&gt;をダウンロードし，&lt;code class=&quot;highlighter-rouge&quot;&gt;activate.bat&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;deactivate.bat&lt;/code&gt;があるフォルダにコピー．自分の場合は，&lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Users\haltaro\Anaconda3\Scripts&lt;/code&gt;だった．&lt;/p&gt;

&lt;h1 id=&quot;感想&quot;&gt;感想&lt;/h1&gt;

&lt;p&gt;PowerShellは便利だけど，割とハマることが多い．早くLinux届かないかしら．&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/22/python-windonws</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/22/python-windonws</guid>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>コトラー，アームストロング，恩藏のマーケティング原理</title>
        <description>&lt;p&gt;&lt;strong&gt;随時更新&lt;/strong&gt;：&lt;a href=&quot;http://amzn.asia/eGcRMag&quot;&gt;コトラー，アームストロング，恩藏のマーケティング原理&lt;/a&gt;の読書メモ．&lt;/p&gt;

&lt;h1 id=&quot;まとめ&quot;&gt;まとめ&lt;/h1&gt;

&lt;h1 id=&quot;メモ&quot;&gt;メモ&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.xiv&lt;/strong&gt;：マーケティングの5ステップ．
    &lt;ol&gt;
      &lt;li&gt;顧客ニーズの理解．&lt;/li&gt;
      &lt;li&gt;顧客主導マーケティング戦略の設定．&lt;/li&gt;
      &lt;li&gt;マーケティング・プログラムの策定．&lt;/li&gt;
      &lt;li&gt;顧客リレーションシップの構築．&lt;/li&gt;
      &lt;li&gt;顧客からの価値獲得．&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.6&lt;/strong&gt;：マーケティングの究極の目的は，セリング（売り込み）を不要とすること．顧客と有益な価値交換ができる関係を築くこと．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.7&lt;/strong&gt;：ニーズとは，人間が本質的に備える性質であり，何かが欠乏している状態．ウォンツとは，ニーズが文化的背景や個人の特徴を通して具現化されたもの．需要とは，ウォンツが購買力を伴ったもの．マーケターが把握すべきなのは，ニーズ．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.10&lt;/strong&gt;：マーケティング・マネジメントとは，ターゲットとなる市場を選定し，その市場との間に収益性の高い関係を構築する技術および科学．マネジメント設計には5つの志向がある：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;生産志向&lt;/strong&gt;：顧客は価格と手に入り易さを重視するので，経営者は生産と流通の効率化に集中すべき，という考え方．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;製品志向&lt;/strong&gt;：顧客は品質と性能を重視するので，経営者は継続的な性能改善に集中すべき，という考え方．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;販売志向&lt;/strong&gt;：顧客は商品の必要性に気づきにくいため，経営者は大々的な販売活動を行うべき，という考え方．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;マーケティング志向&lt;/strong&gt;：顧客満足を提供することが重要なので，経営者は市場のニーズを的確に把握すべき，という考え方．マーケティングの方式として，顧客主導型マーケティングと，顧客誘導型マーケティングがある．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;ソサイエタル・マーケティング志向&lt;/strong&gt;： 顧客の短期的な満足だけでなく，長期的な幸福も考慮すべき，という考え方．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.13&lt;/strong&gt;：マーケティング・ミックスとは，製品（Product），価格（Price），流通（Place），およびプロモーション（Promotion）などのマーケティング実践のために用いる枠組み．4Pとも呼ばれる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.23&lt;/strong&gt;：短期的な売上だけでなく，将来的な売上も考慮すべき．カスタマー・エクイティとは，企業が抱える全顧客の生涯価値の総計である．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.37&lt;/strong&gt;：市場成長率-相対市場シェア・マトリクス．&lt;a href=&quot;http://www.darecon.com/tool/ppm1.html&quot;&gt;PPM分析&lt;/a&gt;とも呼ばれる．スター，問題児，金のなる木，負け犬．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.52&lt;/strong&gt;：&lt;a href=&quot;http://www.darecon.com/tool/swot1.html&quot;&gt;SWOT分析&lt;/a&gt;．企業の強み（Strength），弱み（Weakness），機会（Opportunity），脅威（Threat）を評価する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.53&lt;/strong&gt;：&lt;a href=&quot;http://www.nrc.co.jp/marketing/02-09.html&quot;&gt;マーケティング計画&lt;/a&gt;．エグゼクティブ・サマリー，現状分析，脅威と機会の分析，目標と課題，マーケティング戦略，行動プログラム，予算，コントロールをまとめる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.57&lt;/strong&gt;：&lt;a href=&quot;https://www.leadplus.net/blog/marketing-roi.html&quot;&gt;マーケティングROI&lt;/a&gt;とは，マーケティング投資に対する，マーケティング効果の比率．マーケティングROIの算出は難しい．最近では，マーケティング効果としてカスタマー・エクイティを用いることが増えている．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.70&lt;/strong&gt;：競合他社への&lt;a href=&quot;http://www.marketingbank.jp/special/cat07/129.php&quot;&gt;競争戦略&lt;/a&gt;として，次の三つがある：コスト・リーダーシップ戦略，差別化戦略，そして集中戦略．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.87&lt;/strong&gt;：顧客主導型マーケティング戦略の設計ステップとして，市場細分化，ターゲティング，差別化，およびポジショニングがある．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.98&lt;/strong&gt;：究極のマイクロマーケティングは，個人マーケティング．以下参考．
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://jp.techcrunch.com/2015/08/16/20150814the-future-of-consumer-marketing-is-personal-2/&quot;&gt;TechCrunch，個人ユーザー単位でマーケティングできる未来が来る&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://markezine.jp/article/detail/24150&quot;&gt;MarketZine，個人単位のマーケティングを実現し、顧客体験中心のビジネスを／Adobe Summit 2016開催&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 15 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/15/marketing</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/15/marketing</guid>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>Windows7でJekyll+GitHub Pages</title>
        <description>&lt;p&gt;船便でアメリカから送ったため，2ヶ月ほどLinuxが使えなくなった．そこで，手元のWindowsノートPC（Windows 7 Professional, Service Pack 1, 64 bit）に&lt;a href=&quot;https://jekyllrb-ja.github.io/&quot;&gt;Jekyll&lt;/a&gt;+&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;環境を構築した．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-10-15-env.png&quot; alt=&quot;env&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;環境&quot;&gt;環境&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 7 Professional, Serice Pack 1, 64 bit&lt;/li&gt;
  &lt;li&gt;PowerShell 5.0.10586.117&lt;/li&gt;
  &lt;li&gt;ATOM 1.21.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://opcdiary.net/?page_id=27065&quot;&gt;OPC Diary，私家版Git For Windowsのインストール手順&lt;/a&gt;：WindowsにおけるGit環境構築．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git for Windows&lt;/a&gt;：Windows用Git環境．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dahlbyk/posh-git&quot;&gt;posh-git&lt;/a&gt;：PowerShellでgitコマンド補完を可能にするツール．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaoriya.net/blog/2016/02/07/&quot;&gt;KaoriYa，Windowsでjekyll 3.0（github-pages）を使う&lt;/a&gt;：WindowsにおけるJekyll環境構築方法．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller&lt;/a&gt;：RubyおよびDevKitのインストール．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atom.io/&quot;&gt;ATOM&lt;/a&gt;：GitHubが開発したテキストエディタ．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atom.io/packages/line-ending-converter&quot;&gt;ATOM，Line ending converter&lt;/a&gt;：ATOMの改行コードを一括変換するパッケージ．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/nyoro_712/items/8c80e32aa49f7a2d2eaf&quot;&gt;Qiita，Atomエディタ上からファイルを新規作成する際のデフォルトの改行コードを設定する（Windows環境）&lt;/a&gt;：ATOMのデフォルト改行コード設定方法．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;手順&quot;&gt;手順&lt;/h1&gt;

&lt;h2 id=&quot;1-gitのインストール&quot;&gt;1. Gitのインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://opcdiary.net/?page_id=27065&quot;&gt;OPC Diary，私家版Git For Windowsのインストール手順&lt;/a&gt;を参考にした．&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git for Windows&lt;/a&gt;をダウンロード．&lt;/li&gt;
  &lt;li&gt;インストーラを起動し，基本的にデフォルト設定を選択．ただし，改行設定（&lt;code class=&quot;highlighter-rouge&quot;&gt;Configuring the line ending conversions&lt;/code&gt;）では，上記サイトのおすすめに従い，&lt;code class=&quot;highlighter-rouge&quot;&gt;Checkout as-is, commit as-is&lt;/code&gt;を選択．&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2-gitのグローバル設定&quot;&gt;2. Gitのグローバル設定&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Git bash&lt;/code&gt;を起動し，上記サイトを参考にグローバル設定した．&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global user.name &lt;span class=&quot;s2&quot;&gt;&quot;haltaro&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global user.email &lt;span class=&quot;s2&quot;&gt;&quot;***@gmail.com&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git config --global core quotepath &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;3-gitのsshキー作成&quot;&gt;3. GitのSSHキー作成&lt;/h2&gt;

&lt;p&gt;引き続き上記サイトを参考に，SSHキーを作成した．&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;スタートメニューから&lt;code class=&quot;highlighter-rouge&quot;&gt;Git GUI&lt;/code&gt;を起動．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Help &amp;gt; Show SSH Key&lt;/code&gt;を選択．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Generate Key&lt;/code&gt;をクリックし，適当にpassphraseを入力．&lt;/li&gt;
  &lt;li&gt;公開鍵をコピーして，&lt;code class=&quot;highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;のアカウントに登録．&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-posh-gitのインストール&quot;&gt;4. posh-gitのインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dahlbyk/posh-git&quot;&gt;posh-git&lt;/a&gt;を使うと，PowerShellでgitコマンド補完してくれて便利なので，インストールした． &lt;a href=&quot;http://opcdiary.net/?page_id=27065&quot;&gt;OPC Diary，私家版Git For Windowsのインストール手順&lt;/a&gt;のPsGetを使った方法だと上手くいかなかったので，&lt;a href=&quot;https://github.com/dahlbyk/posh-git&quot;&gt;公式GitHub&lt;/a&gt;から直接クローンした．以下はその詳細である．&lt;/p&gt;

&lt;p&gt;まずは，PowerShellで以下のコマンドを打ち，&lt;a href=&quot;https://github.com/dahlbyk/posh-git&quot;&gt;公式GitHub&lt;/a&gt;からクローンする．ディレクトリはどこでも良い．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; git clone git@github.dahlbyk/posh-git.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;PowerShellのセキュリティ設定を変更した．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Confirm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上記ディレクトリに移動して，&lt;code class=&quot;highlighter-rouge&quot;&gt;install.ps1&lt;/code&gt;を実行した．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; .\install.ps1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;5-rubyのインストール&quot;&gt;5. Rubyのインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller&lt;/a&gt;から2017年10月15日現在の最新版である&lt;code class=&quot;highlighter-rouge&quot;&gt;Ruby 2.4.2-2(x64)&lt;/code&gt;をダウンロードした．&lt;/p&gt;

&lt;h2 id=&quot;6-devkitのインストール&quot;&gt;6. DevKitのインストール&lt;/h2&gt;

&lt;p&gt;Rubyのパッケージ管理システム&lt;code class=&quot;highlighter-rouge&quot;&gt;RubyGems&lt;/code&gt;のインストールに必要な&lt;code class=&quot;highlighter-rouge&quot;&gt;DevKit&lt;/code&gt;をインストールした．以下はその詳細である．&lt;/p&gt;

&lt;p&gt;まず，&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller&lt;/a&gt;から，&lt;code class=&quot;highlighter-rouge&quot;&gt;DevKit-mingw64-32-4.7.2-20130224-1151-sfx.exe&lt;/code&gt;をダウンロードした．以下では&lt;code class=&quot;highlighter-rouge&quot;&gt;C:\DevKit&lt;/code&gt;に解凍したと想定する．&lt;/p&gt;

&lt;p&gt;次に，PowerShellから以下のコマンドを実行した．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; cd C:\DevKit
&amp;gt; ruby dk.rb init
&amp;gt; ruby dk.rb install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;7-関連パッケージのインストール&quot;&gt;7. 関連パッケージのインストール&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RubyGems&lt;/code&gt;を使い，&lt;code class=&quot;highlighter-rouge&quot;&gt;github-pages&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;wdm&lt;/code&gt;をインストールした．&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; gem install github-pages wdm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;8-atomのインストール&quot;&gt;8. ATOMのインストール&lt;/h2&gt;
&lt;p&gt;マークダウンエディタが欲しかったので，&lt;a href=&quot;https://atom.io/&quot;&gt;ATOM&lt;/a&gt;をインストールした．&lt;a href=&quot;https://atom.io/&quot;&gt;公式ページ&lt;/a&gt;からインストーラをダウンロードすれば簡単にできた．しかし…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-10-15-outline.png&quot; alt=&quot;outline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;サマリ部分に全文表示されてしまう問題が発生した．これはUnixの改行コード（&lt;code class=&quot;highlighter-rouge&quot;&gt;LF&lt;/code&gt;）とWindowsの改行コード（&lt;code class=&quot;highlighter-rouge&quot;&gt;CRLF&lt;/code&gt;）が混在していることが原因らしい．&lt;/p&gt;

&lt;h2 id=&quot;9-line-ending-converterで改行コードを一括変換&quot;&gt;9. line-ending-converterで改行コードを一括変換&lt;/h2&gt;

&lt;p&gt;ATOMの設定画面から，&lt;code class=&quot;highlighter-rouge&quot;&gt;line-ending-converter&lt;/code&gt;をインストール．&lt;code class=&quot;highlighter-rouge&quot;&gt;Packages&lt;/code&gt;&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Convert Line Endings To&lt;/code&gt;で，&lt;code class=&quot;highlighter-rouge&quot;&gt;Unix Format&lt;/code&gt;を選択すると，現在選択中のファイルの改行コードが一括変換される．&lt;/p&gt;

&lt;p&gt;詳細は&lt;a href=&quot;https://atom.io/packages/line-ending-converter&quot;&gt;こちら&lt;/a&gt;．&lt;/p&gt;

&lt;h2 id=&quot;10-line-ending-selectorで改行コード設定&quot;&gt;10. line-ending-selectorで改行コード設定&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/nyoro_712/items/8c80e32aa49f7a2d2eaf&quot;&gt;Qiita，Atomエディタ上からファイルを新規作成する際のデフォルトの改行コードを設定する（Windows環境）&lt;/a&gt;を参考に，デフォルト設定を変更．&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;ATOMの設定画面から&lt;code class=&quot;highlighter-rouge&quot;&gt;line-ending-selector&lt;/code&gt;を検索．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;line-ending-selector&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;Setting&lt;/code&gt;ボタンを押下．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Default line ending&lt;/code&gt;から，&lt;code class=&quot;highlighter-rouge&quot;&gt;LF&lt;/code&gt;を選択．&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;11-まとめ&quot;&gt;11. まとめ&lt;/h2&gt;

&lt;p&gt;下図のような環境が完成した．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-10-15-env.png&quot; alt=&quot;env&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PowerShellで&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;して，ブラウザで&lt;code class=&quot;highlighter-rouge&quot;&gt;http://127.0.0.1:4000&lt;/code&gt;から出来栄えを確認しながら，ATOMでマークダウンを編集できる．&lt;/p&gt;

&lt;h1 id=&quot;感想&quot;&gt;感想&lt;/h1&gt;
&lt;p&gt;ATOMは本当に便利．Linuxが届いたらインストールしようと思う．&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/15/jekyll-windows</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/15/jekyll-windows</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>武井由紀子，ユーザ中心ウェブビジネス戦略</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://amzn.asia/0sBIq3B&quot;&gt;武井由紀子，三木順哉，ユーザ中心ウェブビジネス戦略&lt;/a&gt;を読んだ．ウェブビジネスにおけるユーザ理解の重要性とその方法を学んだ．&lt;/p&gt;

&lt;h1 id=&quot;まとめ&quot;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;インターネットはユーザが能動的に情報を取捨選択可能なメディアであるため，ウェブビジネスにおいては，ターゲットユーザを徹底的に理解する必要がある．ユーザ理解のためのツールとして，ユーザ行動パターン検証ツール（アクセスログ解析等）と，ユーザ行動理由検証ツール（ユーザ行動観察調査等）がある．両者の特徴を理解して，使い分けることが重要である．&lt;/p&gt;

&lt;h1 id=&quot;メモ&quot;&gt;メモ&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;p.10&lt;/strong&gt;：いかなる製品やサービスも，まずは事業の目的や市場，ターゲット顧客，収益性といった観点から検討が始まる．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.12&lt;/strong&gt;：本書は二部構成．一部は理論編，二部は実践編．二部は主にウェブマスター向けの話なので，一部を中心に読む．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.19&lt;/strong&gt;：ウェブビジネス成功事例の共通点として，下記4点があるが，もっとも重要なのは1である：
    &lt;ol&gt;
      &lt;li&gt;サイトの顧客（ユーザ）を徹底的に知っている．&lt;/li&gt;
      &lt;li&gt;ユーザを知った上でサイト上でのコミュニケーションを設計している．&lt;/li&gt;
      &lt;li&gt;事前に仮説検証をしている．&lt;/li&gt;
      &lt;li&gt;事後に仮説検証をしている．&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.25&lt;/strong&gt;：インターネットによりメディアの民主化が起こった．企業から発信される情報の信頼性が低下する一方で，個人から発信される情報の信頼性が増大した．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.32&lt;/strong&gt;：論理武装した消費者に対応するためには，ユーザの期待に応えているか，が最も重要．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.37&lt;/strong&gt;：ユーザ利用時のインターネットの特性として，以下の5つがある：前のめり，斜め読み，新鮮，遠慮不要，比較可能．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.45&lt;/strong&gt;：ユーザ中心設計のプロセス：サイトの目的と目標，ターゲットユーザ，コミュニケーションシナリオ，ユーザ視点の検証作業．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.51&lt;/strong&gt;：ウォーターフォール型ではなく，スパイラル型でサイト設計を行う．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.55&lt;/strong&gt;：ユーザの過去の経験やサイト内外での体験まで想定して，コミュニケーションシナリオを構築する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.65&lt;/strong&gt;：ウェブサイトによるプロモーションと相性が良いのは，比較に耐えるサービスか，そもそも比較できないサービス．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.81&lt;/strong&gt;：ユーザ行動パターン検証ツールと，ユーザ行動理由検証ツールを使い分ける必要がある．前者は，例えばアクセスログ解析．後者は，例えばユーザ行動観察調査．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;p.85&lt;/strong&gt;：ユーザの意見ではなく，行動を重視する．往々にして，ユーザの意見は正確でない．&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 14 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/10/14/web-buisiness</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/14/web-buisiness</guid>
        
        
        <category>marketing</category>
        
      </item>
    
      <item>
        <title>Udacity, Intro to Hadoop and MapReduce</title>
        <description>&lt;p&gt;&lt;strong&gt;随時更新&lt;/strong&gt;：&lt;a href=&quot;https://www.udacity.com/course/intro-to-hadoop-and-mapreduce--ud617&quot;&gt;Udacity, Intro to Hadoop and MapReduce&lt;/a&gt;の受講メモ．6部構成の無料講座．全ての動画に日本語訳があり，とても助かる．&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/DEQNknALf_8?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;1-big-data&quot;&gt;1. Big Data&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Big Dataとは，一つのマシンでは処理しきれないほど大量のデータである．&lt;/li&gt;
  &lt;li&gt;Big Dataにおける課題は主に以下の２つ：
    &lt;ul&gt;
      &lt;li&gt;データが高速に生成されること．&lt;/li&gt;
      &lt;li&gt;データが異なるソースから多様なフォーマットで生成されること．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;データの性質を表現する三つのV：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Volume&lt;/strong&gt;（量）：データを保存するだけではなく，処理することも考える必要がある．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Variety&lt;/strong&gt;（多様性）：非構造データや半構造データが増加しており，従来のデータベースへは保管が難しい．もし非構造データをそのまま保存できれば，後で活用できるかもしれない．&lt;code class=&quot;highlighter-rouge&quot;&gt;Hadoop&lt;/code&gt;では，データフォーマットによらず，そのまま保存できる．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Velocity&lt;/strong&gt;（速度）：処理速度が速ければ速いほど，より多くのビジネスチャンスが生まれる．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hadoopの由来は，製作者の子供のおもちゃ．&lt;/li&gt;
  &lt;li&gt;Hadoopの技術的コアは２つ：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;HDFS&lt;/strong&gt;（Hadoop distributed file system）による分散ファイル保存．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;MapReduce&lt;/strong&gt;によるデータ処理．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hadoopでは，データの保存及び処理が，クラスタ毎に行われる．&lt;/li&gt;
  &lt;li&gt;Hadoop ecosystem：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Pig&lt;/strong&gt;，&lt;strong&gt;Hive&lt;/strong&gt;：MapReduceのハイレベルインターフェース．SQLチックに使える．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Impala&lt;/strong&gt;：HDFSへの低レベルインターフェース．PigやHiveより高速．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Sqoop&lt;/strong&gt;，&lt;strong&gt;Flume&lt;/strong&gt;：他のデータベース上のデータを，クラスタとして保存できる．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;HBase&lt;/strong&gt;：HDFS上のリアルタイムデータベース．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Hue&lt;/strong&gt;：GUI．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Oozie&lt;/strong&gt;：ワークフロー管理ツール．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Mahout&lt;/strong&gt;：機械学習ライブラリ．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Cloudera&lt;/strong&gt;：環境構築ツール．上記のソフトウェアをまとめてインストールできる．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-hdfs-and-mapreduce&quot;&gt;2. HDFS and MapReduce&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;HDFSでは，データを64Mbyteの&lt;strong&gt;ブロック&lt;/strong&gt;に分割し，それぞれ別のマシンに保存する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;ネームノード&lt;/strong&gt;は，どのブロックがどのマシンに保存されているかという&lt;strong&gt;メタデータ&lt;/strong&gt;を管理する．&lt;/li&gt;
  &lt;li&gt;冗長性のため，Hadoopはブロックを三回複製する．またネームノードの複製も用意する．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hadoop fs -ls&lt;/code&gt;などで，HDFSにアクセスできる．&lt;code class=&quot;highlighter-rouge&quot;&gt;-ls&lt;/code&gt;の部分は，UNIXのファイルシステムコマンドを利用可能．&lt;/li&gt;
  &lt;li&gt;ハッシュテーブルは，Big Data適用時に，処理時間とメモリ消費という課題があった．&lt;/li&gt;
  &lt;li&gt;MapReduceのまとめ：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Map&lt;/strong&gt;：小さく分割されたデータを，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;key, value&amp;gt;&lt;/code&gt;形式で保存し，同一&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;でまとめる．Mapperの出力を中間レコード（Intermediate records）と呼ぶ．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Shuffle and sort&lt;/strong&gt;：中間レコードをReduceに渡し，&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;でソートする．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Reduce&lt;/strong&gt;：&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;毎に処理し，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;key, values&amp;gt;&lt;/code&gt;リストを作成する．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;最終結果をソートするためには，単独のReducerを使うか，別途処理を行うか．&lt;/li&gt;
  &lt;li&gt;各Reducerが受け取る&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;の数は，事前にはわからない．等分されるとは限らない．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Job tracker&lt;/strong&gt;が，MapperとReducerにジョブを割り当てる．&lt;/li&gt;
  &lt;li&gt;各デーモンは，&lt;strong&gt;Task tracker&lt;/strong&gt;を持つ．&lt;/li&gt;
  &lt;li&gt;HadoopではJavaが使われるが，Pythonを使うこともできる．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hs {mapper script} {reducer script} {input_file} {output directory}&lt;/code&gt;で実行できる．ただし，&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;が既に存在する場合，エラーが返されるので注意．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hadoop fs -put&lt;/code&gt;でデータをHDFSに保存し，&lt;code class=&quot;highlighter-rouge&quot;&gt;hadoop fs -get&lt;/code&gt;で取り出す．&lt;/li&gt;
  &lt;li&gt;仮想マシンで実際にHadoopを動かす．以下，参考：
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1v0zGBZ6EHap-Smsr3x3sGGpDW-54m82kDpPKC2M6uiY/pub&quot;&gt;インストールと初期設定&lt;/a&gt;：ダブルクリックで&lt;code class=&quot;highlighter-rouge&quot;&gt;.zip&lt;/code&gt;を解凍したらうまくいかなかった．コマンドラインで&lt;code class=&quot;highlighter-rouge&quot;&gt;unzip&lt;/code&gt;で解凍した．&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1MZ_rNxJhR4HCU1qJ2-w7xlk2MTHVqa9lnl_uj-zRkzk/pub&quot;&gt;ファイル共有&lt;/a&gt;：うちの環境では&lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.0.9&lt;/code&gt;だった．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/l0I_2nyPNZM?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/d5TZ_2I7dwE?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;技術的な詳細は，&lt;a href=&quot;http://go.cloudera.com/udacity-lesson-2&quot;&gt;Chapter 6 of Tom White’s essential text, Hadoop: The Definitive Guide&lt;/a&gt;を参照．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-mapreduce-code&quot;&gt;3. MapReduce Code&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Hadoop streaming&lt;/strong&gt;により，どんな言語でも処理を書くことができる．&lt;/li&gt;
  &lt;li&gt;MapperおよびReducerには，&lt;code class=&quot;highlighter-rouge&quot;&gt;sys.stdin&lt;/code&gt;形式でデータを入力する．&lt;code class=&quot;highlighter-rouge&quot;&gt;for line in sys.stdin:&lt;/code&gt;以下に処理を書く．&lt;/li&gt;
  &lt;li&gt;MapperおよびReducerは，処理結果を&lt;code class=&quot;highlighter-rouge&quot;&gt;print&lt;/code&gt;で標準出力する．&lt;/li&gt;
  &lt;li&gt;シェルで&lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./mapper.py&lt;/code&gt;で実行すれば，Hadoop外でMapperの動作を検証できる．Reducerについても同様．さらに，以下のコマンドで全ての処理を検証可能．&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat testfile | ./mapper.py | sort | ./reducer.py

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;詳細は，以下の動画がとてもわかりやすい．&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/MYo8EZwDRUA?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;4-project&quot;&gt;4. Project&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;1-1. 全店舗におけるカテゴリー毎の売上額を求めよ．&lt;/li&gt;
  &lt;li&gt;1-2.&lt;/li&gt;
  &lt;li&gt;1-3.&lt;/li&gt;
  &lt;li&gt;2-1.&lt;/li&gt;
  &lt;li&gt;2-2.&lt;/li&gt;
  &lt;li&gt;2-2.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;5-mapreduce-design-patterns&quot;&gt;5. MapReduce Design Patterns&lt;/h1&gt;

&lt;h1 id=&quot;6-project-prep&quot;&gt;6. Project Prep&lt;/h1&gt;
</description>
        <pubDate>Sun, 13 Aug 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/08/13/udacity-hadoop</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/13/udacity-hadoop</guid>
        
        
        <category>data science</category>
        
      </item>
    
      <item>
        <title>Udacity, Intro to Relational Databases</title>
        <description>&lt;p&gt;&lt;strong&gt;随時更新&lt;/strong&gt;：&lt;a href=&quot;https://www.udacity.com/course/intro-to-relational-databases--ud197&quot;&gt;Udacity, Intro to Relational Databases&lt;/a&gt;の受講メモ．5部構成の無料講座．&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/jyju2P-7hPA?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;1-data-and-tables&quot;&gt;1. Data and Tables&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Databaseは，同時に複数の人が編集可能．これが，普通のファイルと異なる点．&lt;/li&gt;
  &lt;li&gt;Tableは，headerとbodyからなる．headerは，table nameと，column nameと，column typeからなる．bodyは，rowsとcolumnsからなる．&lt;/li&gt;
  &lt;li&gt;複数の行に跨る演算をaggregationと呼ぶ．SQLで使えるaggregationの代表的なものとして，count，avg，max，min，sumなどがある．&lt;/li&gt;
  &lt;li&gt;codeからdatabaseに&lt;code class=&quot;highlighter-rouge&quot;&gt;query&lt;/code&gt;を出すと，&lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt;を返される．&lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt;は，原則的にTable形式．&lt;/li&gt;
  &lt;li&gt;Database中でデータの唯一性を担保するために，idを与えることがある．このように識別に用いられるcolumnを&lt;code class=&quot;highlighter-rouge&quot;&gt;primary key&lt;/code&gt;と呼ぶ．&lt;/li&gt;
  &lt;li&gt;複数の情報を持つオブジェクトを定義するよりは，複数のTableで管理したほうが効率的．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-elements-of-sql&quot;&gt;2. Elements of SQL&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;SQLのtypeとして，&lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;などがある．&lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;および&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;は，&lt;code class=&quot;highlighter-rouge&quot;&gt;'2017-08-10'&lt;/code&gt;のようにシングルクォートで囲む．主なSQLのtypeは以下．&lt;/li&gt;
  &lt;li&gt;Text and string types
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;：長さに制限のない文字列．Pythonの&lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt;に相当．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;char(n)&lt;/code&gt;：長さが&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;の文字列．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;varchar(n)&lt;/code&gt;：長さが最大&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;の文字列．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Numeric types
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;integer&lt;/code&gt;：整数型．Pythonの&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;に相当．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;real&lt;/code&gt;：浮動小数点型．Pythonの&lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;に相当．精度は小数第6位．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;double precision&lt;/code&gt;：倍精度小数点．精度は小数第15位．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;decimal&lt;/code&gt;：正確な小数型（？）．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Date and time types
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;：日付型．年，月，日．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;：時刻型．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt;：&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;および&lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;基本構文：&lt;strong&gt;select&lt;/strong&gt; &lt;em&gt;columns&lt;/em&gt; &lt;strong&gt;from&lt;/strong&gt; &lt;em&gt;tables&lt;/em&gt; &lt;strong&gt;where&lt;/strong&gt; &lt;em&gt;condition&lt;/em&gt;;&lt;/li&gt;
  &lt;li&gt;出力数に制限を設けるとき：&lt;strong&gt;limit&lt;/strong&gt; &lt;em&gt;count&lt;/em&gt; [&lt;strong&gt;offset&lt;/strong&gt; &lt;em&gt;skip&lt;/em&gt;]&lt;/li&gt;
  &lt;li&gt;並び替えるとき：&lt;strong&gt;order by&lt;/strong&gt; &lt;em&gt;columns&lt;/em&gt; [&lt;strong&gt;desc&lt;/strong&gt;]&lt;/li&gt;
  &lt;li&gt;結果をまとめるとき：&lt;strong&gt;group by&lt;/strong&gt; &lt;em&gt;columns&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;例えば，同じ名前の動物の数を数えるとき：&lt;code class=&quot;highlighter-rouge&quot;&gt;select name, count(*) as num from animals group by name;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pythonでも同様のことはできる．違いはスピードとメモリ．Databaseは格段に高速に，かつメモリ消費を抑えて実行できる．&lt;/li&gt;
  &lt;li&gt;新たに要素を追加するとき：&lt;strong&gt;insert into&lt;/strong&gt; &lt;em&gt;table&lt;/em&gt; &lt;strong&gt;values (&lt;/strong&gt; &lt;em&gt;val1, val2, …&lt;/em&gt; &lt;strong&gt;)&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;ただし，特定の列を指定して追加するときは：&lt;strong&gt;insert into&lt;/strong&gt; &lt;em&gt;table&lt;/em&gt;(&lt;em&gt;column1, column2, …&lt;/em&gt;) &lt;strong&gt;values (&lt;/strong&gt; &lt;em&gt;val1, val2, …&lt;/em&gt; &lt;strong&gt;)&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;Databaseを結合するとき：&lt;em&gt;T&lt;/em&gt; &lt;strong&gt;join&lt;/strong&gt; &lt;em&gt;S&lt;/em&gt; &lt;strong&gt;on&lt;/strong&gt; &lt;em&gt;T.color = S.paint&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;例えば，&lt;code class=&quot;highlighter-rouge&quot;&gt;fish&lt;/code&gt;を食べる動物の名前を抽出したとき：&lt;code class=&quot;highlighter-rouge&quot;&gt;select name from animals join diet on animals.species=diet.species where food='fish';&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;where&lt;/code&gt;は&lt;code class=&quot;highlighter-rouge&quot;&gt;group by&lt;/code&gt;の前に適用されるが，&lt;code class=&quot;highlighter-rouge&quot;&gt;having&lt;/code&gt;は&lt;code class=&quot;highlighter-rouge&quot;&gt;group by&lt;/code&gt;の後に適用される．&lt;/li&gt;
  &lt;li&gt;Lesson 3に向けて，&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt;と&lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;で環境を構築．Vagrantってこんな便利だったのか．
    &lt;ul&gt;
      &lt;li&gt;仮想環境構築：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ vagrant up&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;ログイン：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ vagrant ssh&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;ファイル共有は&lt;code class=&quot;highlighter-rouge&quot;&gt;/vagrant&lt;/code&gt;ディレクトリ．&lt;/li&gt;
      &lt;li&gt;PostgreSQLの起動：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ psql&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;ログアウト：&lt;code class=&quot;highlighter-rouge&quot;&gt;$ exit&lt;/code&gt;あるいは&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl-D&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;VagrantとDockerの違いについては，以下が参考になった．
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://qiita.com/hidekuro/items/fc12344d36d996198e96&quot;&gt;VagrantとDockerについて名前しか知らなかったので試した&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://acchi-muite-hoi.hatenablog.com/entry/2016/05/30/041618&quot;&gt;dockerとvagrantの違い言える？新人エンジニアでも分かった気になれる俺流まとめ&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-python-db-api&quot;&gt;3. Python DB-API&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;PythonからDatabaseを叩く際，DB-APIを用いる．DB-APIはPythonの組み込みモジュール．Databaseに応じて，DB-APIモジュールは異なる：SQLiteは&lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite3&lt;/code&gt;，PostgreSQLは&lt;code class=&quot;highlighter-rouge&quot;&gt;psycopg2&lt;/code&gt;，ODBCは&lt;code class=&quot;highlighter-rouge&quot;&gt;pyodbc&lt;/code&gt;，MySQLは&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.connector&lt;/code&gt;など．&lt;/li&gt;
  &lt;li&gt;例えば，次のようなPythonコードを書く．&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/92a4506f6b0f3461b217934860490173.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;Databaseにおける追加や削除を行った後は，必ず&lt;code class=&quot;highlighter-rouge&quot;&gt;Connection.commit()&lt;/code&gt;する．&lt;/li&gt;
  &lt;li&gt;PostgreSQLを使って，簡易なForumサイトを作成する．実験環境を確認．
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ vagrant up&lt;/code&gt;で仮想環境を立ち上げ．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ vagrant ssh&lt;/code&gt;で仮想環境にログイン．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ cd /vagrant/forum&lt;/code&gt;で当該ディレクトリに移動．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ python form.py&lt;/code&gt;でForumサーバを起動．ブラウザで&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8000&lt;/code&gt;にアクセス．適当にMessageを投稿してみる．&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+C&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;$ python form.py&lt;/code&gt;で再起動すると，先ほど投稿したMessageが消えていることがわかる．以降では，Messageを保存する機能をPostgreSQLで実装する．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;4-deeper-into-sql&quot;&gt;4. Deeper into SQL&lt;/h1&gt;

&lt;h1 id=&quot;5-tournament-database&quot;&gt;5. Tournament Database&lt;/h1&gt;
</description>
        <pubDate>Thu, 10 Aug 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2017/08/10/udacity-rdb</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/10/udacity-rdb</guid>
        
        
        <category>data science</category>
        
      </item>
    
  </channel>
</rss>
