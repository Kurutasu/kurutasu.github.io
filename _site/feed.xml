<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memotaro</title>
    <description>I'm haltaro, a researcher from Tokyo, Japan. My research interests include machine learning, marketing science, network engineering and shiba-inu:)</description>
    <link>https://haltaro.github.io/</link>
    <atom:link href="https://haltaro.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 15 Apr 2018 12:44:41 +0900</pubDate>
    <lastBuildDate>Sun, 15 Apr 2018 12:44:41 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>東京大学教養学部統計学教室編，統計学入門</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://amzn.asia/8f1AQFC&quot;&gt;東京大学教養学部統計学教室編，統計学入門&lt;/a&gt;を読んだ．統計学の基礎知識を復習できた．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;大数の法則と中心極限定理&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;大数の法則：標本平均&lt;script type=&quot;math/tex&quot;&gt;\bar{X}&lt;/script&gt;は母平均&lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt;に確率収束する．&lt;/li&gt;
  &lt;li&gt;中心極限定理：母集団分布がなんであっても，標本和&lt;script type=&quot;math/tex&quot;&gt;\sum_{i}^{n} X_{i}&lt;/script&gt;は十分大きな&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;に対して大略正規分布に収束する．モーメント母関数を用いて証明できる．&lt;/li&gt;
  &lt;li&gt;累積密度分布の逆関数が陽に求まる場合は，一様分布に従う&lt;script type=&quot;math/tex&quot;&gt;U&lt;/script&gt;を逆関数で変換することで，もとの確率密度関数に従う乱数を生成できる．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;標本分布&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;統計的推測とは，標本から母集団について推測すること．&lt;/li&gt;
  &lt;li&gt;母集団分布のパラメータを母数と呼ぶ．&lt;/li&gt;
  &lt;li&gt;標本平均のように，標本を要約し，母集団の母数の推測に使われるものを統計量と呼ぶ．&lt;/li&gt;
  &lt;li&gt;標本分散は，&lt;script type=&quot;math/tex&quot;&gt;s^2 = \frac{1}{n-1} \sum_i^n (X_i - \bar{X})&lt;/script&gt;で計算できる．計算に母平均&lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt;でなく標本平均&lt;script type=&quot;math/tex&quot;&gt;\bar{X}&lt;/script&gt;を使っているため，自由度が1下がり，分母は&lt;script type=&quot;math/tex&quot;&gt;n-1&lt;/script&gt;となることに注意．&lt;/li&gt;
  &lt;li&gt;母集団が再生性を持つ分布に従うとき，標本和の分布は簡単に求まる．再生性とは，独立な複数の確率変数が同一の分布族に属する場合，その和もそれに属すること．二項分布，ポアソン分布，正規分布など．&lt;/li&gt;
  &lt;li&gt;母集団が有限&lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;のとき，&lt;script type=&quot;math/tex&quot;&gt;V(\bar{x}) = \frac{N-n}{N-1}\cdot \frac{\sigma^2}{n}&lt;/script&gt;となる．このとき&lt;script type=&quot;math/tex&quot;&gt;\frac{N-n}{N-1}&lt;/script&gt;を有限母集団修正と呼ぶ．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-2&quot;&gt;正規分布からの標本&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\chi^{2}&lt;/script&gt;分布：&lt;script type=&quot;math/tex&quot;&gt;Z_1, Z_2, \dots, Z_k&lt;/script&gt;を独立な，標準正規分布&lt;script type=&quot;math/tex&quot;&gt;N(0, 1)&lt;/script&gt;に従う確率変数とするとき，&lt;script type=&quot;math/tex&quot;&gt;\chi^{2} = Z_1^2 + Z_2^2 + \dots + Z_k^2&lt;/script&gt;を自由度&lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;の&lt;script type=&quot;math/tex&quot;&gt;\chi^{2}&lt;/script&gt;分布と呼ぶ．ちなみに，&lt;script type=&quot;math/tex&quot;&gt;\chi^{2} = (n-1) s^2 / \sigma^{2}&lt;/script&gt;は自由度&lt;script type=&quot;math/tex&quot;&gt;n-1&lt;/script&gt;の&lt;script type=&quot;math/tex&quot;&gt;\chi^{2}&lt;/script&gt;分布である．&lt;/li&gt;
  &lt;li&gt;分散が未知のときの標本平均の標本分布として，スチューデントの&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;分布が用いられる．&lt;script type=&quot;math/tex&quot;&gt;Z&lt;/script&gt;が標準正規分布&lt;script type=&quot;math/tex&quot;&gt;N(0, 1)&lt;/script&gt;に従い，&lt;script type=&quot;math/tex&quot;&gt;Z&lt;/script&gt;と独立な&lt;script type=&quot;math/tex&quot;&gt;Y&lt;/script&gt;が自由度&lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;の&lt;script type=&quot;math/tex&quot;&gt;\chi^2&lt;/script&gt;分布に従うとき，&lt;script type=&quot;math/tex&quot;&gt;t = \frac{Z}{\sqrt{Y/k}}&lt;/script&gt;は自由度&lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;の&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;分布である．つまり，&lt;script type=&quot;math/tex&quot;&gt;t = \frac{\bar{x} - \mu}{s / \sqrt{n}}&lt;/script&gt;は自由度&lt;script type=&quot;math/tex&quot;&gt;n-1&lt;/script&gt;の&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;分布．&lt;/li&gt;
  &lt;li&gt;二標本問題．標本平均の差の標本分布は，条件により分布が異なる：
    &lt;ul&gt;
      &lt;li&gt;母分散が既知のとき：正規分布&lt;/li&gt;
      &lt;li&gt;母分散が未知だが等しいとき：t分布&lt;/li&gt;
      &lt;li&gt;母分散が未知で，かつ等しいとは限らないとき：ウェルチの近似法を用いたt分布．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;標本相関係数の標本分布．フィッシャーのz変換を使うらしい．詳細は不明．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-3&quot;&gt;推定&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;推定量（estimator）：母数を推定するために標本から求めた統計量．標本平均や標本分散．&lt;/li&gt;
  &lt;li&gt;点推定（point estimation）：母数をある一つの値で指定する．&lt;/li&gt;
  &lt;li&gt;区間推定（interval estimation）：母数の値が入る確率がある値&lt;script type=&quot;math/tex&quot;&gt;1 - \alpha&lt;/script&gt;以上と保証される区間を求める．&lt;/li&gt;
  &lt;li&gt;モーメント法による点推定は，母集団モーメント関数と標本モーメント関数が等しいと仮定する方法．モーメント法で標本分散を点推定すると不偏推定量とはならない．より洗練された手法として，最尤法がある．&lt;/li&gt;
  &lt;li&gt;点推定の基準：不偏性．一致性．漸近正規性．有効性．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-4&quot;&gt;統計的検定&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;母平均の差の検定は，&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;検定を用いる．&lt;/li&gt;
  &lt;li&gt;母分散の検定は，&lt;script type=&quot;math/tex&quot;&gt;\chi^2&lt;/script&gt;検定を用いる．&lt;/li&gt;
  &lt;li&gt;母分散の比の検定は，&lt;script type=&quot;math/tex&quot;&gt;F&lt;/script&gt;検定を用いる．&lt;/li&gt;
  &lt;li&gt;適合度の&lt;script type=&quot;math/tex&quot;&gt;\chi^2&lt;/script&gt;検定．&lt;script type=&quot;math/tex&quot;&gt;\chi^2=\frac{\sum (O - E)^2}{E}&lt;/script&gt;．ここで，&lt;script type=&quot;math/tex&quot;&gt;O&lt;/script&gt;は観測された値，&lt;script type=&quot;math/tex&quot;&gt;E&lt;/script&gt;は理論的に予測された値を表す．この考え方を使うと，分割表の独立性の検定などが実施できる．&lt;/li&gt;
  &lt;li&gt;第一種の誤り：帰無仮説を誤って棄却してしまうこと．有意水準&lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;の確率で発生しうる．&lt;/li&gt;
  &lt;li&gt;第二種の誤り：帰無仮説を誤って棄却しないこと．確率&lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;で発生し得る．このとき，&lt;script type=&quot;math/tex&quot;&gt;1-\beta&lt;/script&gt;を検出力と呼ぶ．&lt;/li&gt;
  &lt;li&gt;棄却域の調整により&lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;と&lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;を調整できるが，療法を小さくすることは出来ない．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-5&quot;&gt;回帰分析&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;決定係数&lt;script type=&quot;math/tex&quot;&gt;\eta^2&lt;/script&gt;は，&lt;script type=&quot;math/tex&quot;&gt;Y_{i}&lt;/script&gt;の変動のうち&lt;script type=&quot;math/tex&quot;&gt;X_{i}&lt;/script&gt;で説明できる変動の割合を示す．0から1の値を取り，1に近いほど良い．&lt;/li&gt;
  &lt;li&gt;偏回帰係数&lt;script type=&quot;math/tex&quot;&gt;\beta_2&lt;/script&gt;（傾き）の検定するときは，&lt;script type=&quot;math/tex&quot;&gt;\frac{\hat{\beta} - \beta}{s.e. \left(\hat{\beta}\right)}&lt;/script&gt;をt検定にかける．重回帰の場合はF検定にかける．詳細は3巻2章で．&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 15 Apr 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/04/15/statistics-book-1</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/04/15/statistics-book-1</guid>
        
        
        <category>statistics</category>
        
      </item>
    
      <item>
        <title>JekyllのCategories一覧をアルファベット順にする</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://haltaro.github.io/posts/&quot;&gt;Posts&lt;/a&gt;ページのCategoriesが出現順で使いづらかったので，アルファベット順になるようコードをを修正した．&lt;/p&gt;

&lt;p&gt;こちらは修正前．
&lt;img src=&quot;/assets/2018-04-15-before.png&quot; alt=&quot;before&quot; /&gt;&lt;/p&gt;

&lt;p&gt;そしてこちらが修正後．
&lt;img src=&quot;/assets/2018-04-15-after.png&quot; alt=&quot;after&quot; /&gt;&lt;/p&gt;

&lt;p&gt;アルファベット順になった．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/Phlow/57eb457898e4ac4c4a20&quot;&gt;Phlow/jekyll-sorted-category-for-loop-alphabetical-date.liquid - Gist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;手順&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./projects.md&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;category&lt;/code&gt;ループを&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/f0d3f4848103c64296919acef3b2e228.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;以下のように修正した．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/260563d870c5663bd2dae1179aabcac2.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;section-2&quot;&gt;感想&lt;/h1&gt;

&lt;p&gt;そろそろ真面目にRubyを勉強するべきかもしれない．&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Apr 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/04/15/sort-categories</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/04/15/sort-categories</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Fast.ai，Practical Deep Learning for Coders 2018：1．Dogs and cats</title>
        <description>&lt;p&gt;&lt;i class=&quot;fa fa-spinner&quot;&gt;&lt;/i&gt; &lt;strong&gt;更新中&lt;/strong&gt;：&lt;a href=&quot;http://www.fast.ai/&quot;&gt;Fast.ai&lt;/a&gt;のMOOC&lt;a href=&quot;http://course.fast.ai/&quot;&gt;Practical Deep Learning for Coders 2018&lt;/a&gt;の受講を開始した．全7回の講座で，KaggleマスターのJeremy Howardから無料でDeep learningを教えてもらえるらしい．第1回は，犬と猫の分類コンペをベースに，CNNのチューニングについて学ぶ．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;教材&lt;/h1&gt;

&lt;p&gt;2018年に入ってからビデオの内容を更新したらしいので注意．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://course.fast.ai/lessons/lessons.html&quot;&gt;Video lesson&lt;/a&gt;：全7本．それぞれ2時間以上ある．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fastai/fastai/tree/master/courses/dl1&quot;&gt;Notebook&lt;/a&gt;：Videoのデモの詳細な説明がある．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://forums.fast.ai/t/wiki-lesson-1/9398&quot;&gt;Wiki&lt;/a&gt;：更に詳細な説明がある．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://forums.fast.ai/&quot;&gt;Forum&lt;/a&gt;：わからないことはここで聞く．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;lesson-1-recognizing-cats-and-dogs&quot;&gt;Lesson 1. Recognizing cats and dogs&lt;/h1&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;460&quot; src=&quot;https://www.youtube.com/embed/IPBSB1HLNLo?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;gpu&quot;&gt;GPUの準備&lt;/h2&gt;

&lt;p&gt;GPUの準備方法として，いくつかのオプションがある：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.crestle.com/&quot;&gt;Crestle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.paperspace.com/&quot;&gt;Paperspace&lt;/a&gt;：&lt;a href=&quot;https://github.com/reshamas/fastai_deeplearn_part1/blob/master/tools/paperspace.md&quot;&gt;Paperspace for fast.ai - GitHub&lt;/a&gt;が参考になる．&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com&quot;&gt;AWS&lt;/a&gt;：&lt;a href=&quot;https://github.com/reshamas/fastai_deeplearn_part1/blob/master/tools/aws_ami_gpu_setup.md&quot;&gt;AWS fastami GPU Image Setup&lt;/a&gt;が参考になる．&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とりあえず，使ったことのあるAWSを選択する．&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://course.fast.ai/start.html&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/reshamas/fastai_deeplearn_part1/blob/master/tools/paperspace.md&quot;&gt;Paperspace for fast.ai - GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/poisuke/items/a19dfe7e52d890c8e52b&quot;&gt;fast.aiの最初の最初のAWS設定につまずかないために - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 11 Mar 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/03/11/fastai-01-01</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/03/11/fastai-01-01</guid>
        
        
        <category>deep learning</category>
        
      </item>
    
      <item>
        <title>Jupyter notebookのフォントを変更する</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://jupyter.org/&quot;&gt;Jupyter notebook&lt;/a&gt;のコードブロックを等幅フォントにしたい．&lt;a href=&quot;https://github.com/dunovank/jupyter-themes&quot;&gt;Jupytertheme&lt;/a&gt;を使っても良いが，拡張機能のボタンが消えてしまうことがあり不便．&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.jupyter/custom/custom.css&lt;/code&gt;をいじって変更した．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://shu87.hateblo.jp/entry/2017/08/30/003224&quot;&gt;Jupyter notebookを等幅フォントにする - 元文学部統計学専攻学生の備忘録&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/hiropignis/items/f2192d86971746b849e8&quot;&gt;Jupyter Notebookを自分仕様に：背景，アイコンの変更 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;手順&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.jupyter/custom/custom.css&lt;/code&gt;に，&lt;code class=&quot;highlighter-rouge&quot;&gt;.CodeMirror pre, .output pre { font-family: Monaco, monospace; }&lt;/code&gt;を追記して，Jupyterを再起動する．&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Mar 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/03/05/jupyter-font</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/03/05/jupyter-font</guid>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Kaggle，Web Traffic Time Series Forecasting，1st place solution</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.kaggle.com/c/web-traffic-time-series-forecasting&quot;&gt;Kaggle，Web Traffic Time Series Forecasting&lt;/a&gt;の&lt;a href=&quot;https://www.kaggle.com/c/web-traffic-time-series-forecasting/discussion/43795&quot;&gt;1st place solution&lt;/a&gt;のメモ．Wikipediaのpageviewを予測するコンテスト．解法のポイントは，一年前と四半期前の値を特徴量として追加し，RNN seq2seqを使うこと．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;概要&lt;/h1&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;予測には２つの情報を用いた：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ローカルな特徴量．自己相関モデル，移動平均モデル，季節性モデルなど．&lt;/li&gt;
  &lt;li&gt;グローバルな特徴量．年周期，四半期周期のトレンド．&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-03-04-autoregression.png&quot; alt=&quot;autoregression&quot; /&gt;&lt;/p&gt;

&lt;p&gt;RNN seq2seqを利用した理由は：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;RNNはARIMAの自然な拡張と考えられるし，柔軟で表現力が高い．&lt;/li&gt;
  &lt;li&gt;RNNはノンパラメトリック．&lt;/li&gt;
  &lt;li&gt;RNNはどんな特徴量も簡単に扱える．&lt;/li&gt;
  &lt;li&gt;seq2seqはこのタスクに適していると考えた．直前の時系列の予測値を入力として使うため，誤差が蓄積されやすいため，結果として極端な予測は避けるようになる&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;．&lt;/li&gt;
  &lt;li&gt;Deep learningは流行っている．&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;feature-engineering&quot;&gt;Feature engineering&lt;/h2&gt;

&lt;p&gt;利用した特徴量は：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;pageviews&lt;/strong&gt;：&lt;code class=&quot;highlighter-rouge&quot;&gt;log1p()&lt;/code&gt;で変換したビュー数．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;agent&lt;/strong&gt;，&lt;strong&gt;country&lt;/strong&gt;，&lt;strong&gt;site&lt;/strong&gt;：ページのURLから抽出．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;year-to-year autocorrelation&lt;/strong&gt;，&lt;strong&gt;quarter-to-quarter autocorrelation&lt;/strong&gt;：年周期や四半期周期のトレンドを捉えるため．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;page popularity&lt;/strong&gt;：人気のページとそうでないものは，動きが異なるため．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;lagged pageviews&lt;/strong&gt;：365日前と90日前のpageview．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;feature-preprocessing&quot;&gt;Feature preprocessing&lt;/h2&gt;

&lt;p&gt;One-hot encodingしたカテゴリカル変数を含む，全ての特徴量をそれぞれ独立に正規化した．時不変な特徴量（&lt;code class=&quot;highlighter-rouge&quot;&gt;country&lt;/code&gt;など）を時系列データ長に&lt;code class=&quot;highlighter-rouge&quot;&gt;tf.tile()&lt;/code&gt;で変換した．&lt;/p&gt;

&lt;p&gt;学習用データは，固定長でランダムに抽出した．&lt;/p&gt;

&lt;h2 id=&quot;model-core&quot;&gt;Model core&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-03-04-model-core.png&quot; alt=&quot;model-core&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Encoderとして&lt;a href=&quot;https://www.tensorflow.org/versions/master/api_docs/python/tf/contrib/cudnn_rnn/CudnnGRU&quot;&gt;cuDNN GRU&lt;/a&gt;を使った．cuDNN GRUはドキュメントが貧弱だが，通常のTensorFlowの&lt;code class=&quot;highlighter-rouge&quot;&gt;RNNCells&lt;/code&gt;より5倍から10倍ほど高速だ．&lt;/p&gt;

&lt;p&gt;Decoderとして&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/GRUBlockCell&quot;&gt;GRUBlockCell&lt;/a&gt;を&lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/while_loop&quot;&gt;tf.while_loop()&lt;/a&gt;でラップして使った．ループの中で，直前の時系列の予測結果を次のセルに入力する．&lt;/p&gt;

&lt;h2 id=&quot;working-with-long-timeseries&quot;&gt;Working with long timeseries&lt;/h2&gt;

&lt;p&gt;LSTM/GRUはせいぜい100から300アイテム前の情報しか保持できないため，700日分のpageviewを使用する今回のタスクには，直接利用できない．&lt;/p&gt;

&lt;p&gt;最初は&lt;a href=&quot;https://distill.pub/2016/augmented-rnns/&quot;&gt;attention&lt;/a&gt;的な考え方で，一年前と四半期前のEncoderの出力をDecoderの入力に使うことを考えた．しかし，処理が重い割に性能が出なかった．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-03-04-attention.png&quot; alt=&quot;attention&quot; /&gt;&lt;/p&gt;

&lt;p&gt;結局，一年前と四半期前のpageviewをそのまま特徴量として使うことに決めた．Attentionより良い性能を得た．また，これによりEncoder長をむやみに長くする必要がなくなった．過去60から90日のアイテムを利用する場合でさえ，上記のモデルより高速に優れた予測が可能だった．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-03-04-lagged.png&quot; alt=&quot;lagged&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;losses-and-regularization&quot;&gt;Losses and regularization&lt;/h2&gt;

&lt;p&gt;コンペの評価で用いられる&lt;a href=&quot;https://en.wikipedia.org/wiki/Symmetric_mean_absolute_percentage_error&quot;&gt;SMAPE&lt;/a&gt;は0付近で微分不可能な動きをするため，学習に利用しなかった．代わりに微分可能なSAMPE関数を独自に実装して利用した．&lt;/p&gt;

&lt;p&gt;最終的な出力は整数値に丸めた．負の出力値は0に修正した．&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1511.08400&quot;&gt;Regularizing RNNs by Stabilizing Activations&lt;/a&gt;を参考にRNNの正規化を試みたが，改善効果は微々たるものだった．&lt;/p&gt;

&lt;h2 id=&quot;training-and-validation&quot;&gt;Training and validation&lt;/h2&gt;

&lt;p&gt;学習時は，&lt;a href=&quot;https://arxiv.org/abs/1705.07795&quot;&gt;Training Deep Networks without Learning Rates Through Coin Betting&lt;/a&gt;のCOCOB optimizerと，Gradient clippingを合わせて使った．COCOBは自動で学習率を調整してくれるから便利だし，従来のモーメントベースのoptimizerより高速だ．&lt;/p&gt;

&lt;p&gt;TrainingとValidationの分け方として，次の二つが考えられる．&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Walk-forward split&lt;/strong&gt;：厳密にはSplitではない．TrainingとValidationでタイムフレームをずらす方法．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Side-by-side split&lt;/strong&gt;：王道のSplit．データセットを独立な集合に分割し，それぞれTrainingとValidationに利用する．&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-03-04-split.png&quot; alt=&quot;split&quot; /&gt;&lt;/p&gt;

&lt;p&gt;今回は両方共利用した．Walk-forward splitは今回のタスクと親和性が高いが，Validation用に新しい日付のデータセットを残しておく必要があるため，古い日付のデータセットしか学習に使えない．一方でSide-by-sideは新しい日付のデータセットも学習に使えるが，Validationの性能がTrainingデータに大きく依存してしまう．&lt;/p&gt;

&lt;p&gt;ハイパーパラメータのチューニングにのみSplitを利用し，全てのデータを使って再度学習したモデルで，最終的な予測を行った．&lt;/p&gt;

&lt;h2 id=&quot;reducing-model-variance&quot;&gt;Reducing model variance&lt;/h2&gt;

&lt;p&gt;今回の入力データ（Wikipediaのpageview）は非常にノイジーなので，Varianceを下げる工夫が必要だった．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-03-04-variance.png&quot; alt=&quot;variance&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;過学習直前（と思われる）前後1000エポックで，10個のチェックポイントを作成．&lt;/li&gt;
  &lt;li&gt;サンプルを分割し，三つの独立なモデルを作成し，それぞれチェックポイントを作成．&lt;/li&gt;
  &lt;li&gt;合計30のチェックポイントに対して，SGD averaging（ASGD）を適用する．つまり学習結果のパラメータを平均して，予測に使う．&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;hyperparameter-tuning&quot;&gt;Hyperparameter tuning&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://automl.github.io/SMAC3/stable/&quot;&gt;SMAC3&lt;/a&gt;を使ってチューニングした．SMAC3は：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;条件付きチューニングが可能．例えば，&lt;code class=&quot;highlighter-rouge&quot;&gt;n_layer &amp;gt; 1&lt;/code&gt;のときのみ，第二層を&lt;code class=&quot;highlighter-rouge&quot;&gt;dropout&lt;/code&gt;するなど．&lt;/li&gt;
  &lt;li&gt;モデルのVarianceを考慮可能．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;感想&lt;/h1&gt;

&lt;p&gt;大筋は理解できた（気になった）．学習時のDecoderの扱いなど，&lt;a href=&quot;https://github.com/Arturus/kaggle-web-traffic&quot;&gt;ソースコード&lt;/a&gt;を確認した方が良いかもしれない．&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/c/web-traffic-time-series-forecasting/discussion/43795&quot;&gt;Kaggle，Web Traffic Time Series Forecasting，1st place solution&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Arturus/kaggle-web-traffic&quot;&gt;Arturus/kaggle-web-traffic - GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://automl.github.io/SMAC3/stable/&quot;&gt;SMAC3 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;seq2seqのDecoderの学習時って，普通，直前の時系列の予測結果は使わずに，ターゲットデータを使うんじゃなかったっけ？ソースコードを確認した方が良いかもしれない． &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 03 Mar 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/03/03/kaggle-wikipedia-1st</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/03/03/kaggle-wikipedia-1st</guid>
        
        
        <category>deep learning</category>
        
      </item>
    
      <item>
        <title>多田洋介，行動経済学入門</title>
        <description>&lt;p&gt;&lt;i class=&quot;fa fa-spinner&quot;&gt;&lt;/i&gt; &lt;strong&gt;更新中&lt;/strong&gt;：&lt;a href=&quot;http://amzn.asia/46XW33f&quot;&gt;多田洋介，行動経済学入門&lt;/a&gt;を読んだ．心理学の発想を経済活動や経済減少の分析に活かす，行動経済学の基本を学ぶことができた．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;行動経済学とは何か？&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;新古典派と呼ばれる標準的な経済学の世界では，以下のような特徴を持つ合理的経済人（homo economicus）を仮定している：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;超合理的&lt;/strong&gt;：全ての情報を完璧に処理し，自己の効用を最大化する意思決定を常に行う．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;超自制的&lt;/strong&gt;：時間を通じた活動に関して，はじめに決めた計画通りに実行する．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;超利己的&lt;/strong&gt;：他者の利益や公平性といった価値基準を持たない．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;経済学が合理的経済人を利用する理由：
    &lt;ul&gt;
      &lt;li&gt;数学的な扱いやすさ．&lt;/li&gt;
      &lt;li&gt;合理的でないものは淘汰されるだろうというダーウィニズム．&lt;/li&gt;
      &lt;li&gt;集合的に人間を見た場合に，非合理的な人間が市場に及ぼす影響は小さいという仮定．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;行動経済学&lt;/strong&gt; とは，標準的な経済学が十分に捉えきれていない人間の行動を，心理学あるいは認知科学といった学問分野研究成果を利用して紐解くことで，説明能力を補強しようという試み．&lt;/li&gt;
  &lt;li&gt;ベイズ・ルール，ゲーム理論，期待効用仮説，時間を通じた消費決定モデルは経済学の標準的なツールだが，これらが現実の人間の行動を的確に表現しているかどうかについては疑問がある．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;人間はどこまで合理的か?&lt;/h1&gt;

&lt;h1 id=&quot;section-2&quot;&gt;近道を選ぶと失敗する&lt;/h1&gt;

&lt;h1 id=&quot;section-3&quot;&gt;プロスペクト理論&lt;/h1&gt;

&lt;h1 id=&quot;section-4&quot;&gt;非合理的な投資家は試乗を狂わす&lt;/h1&gt;

&lt;h1 id=&quot;section-5&quot;&gt;人間は「超」自制的か&lt;/h1&gt;

&lt;h1 id=&quot;section-6&quot;&gt;人間は他人の目を気にするもの&lt;/h1&gt;

&lt;h1 id=&quot;section-7&quot;&gt;心理学的アプローチの限界と可能性&lt;/h1&gt;
</description>
        <pubDate>Tue, 27 Feb 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/02/27/intro-to-behavioral-economics</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/02/27/intro-to-behavioral-economics</guid>
        
        
        <category>economics</category>
        
      </item>
    
      <item>
        <title>HTTPS+トークンで複数のGitHubアカウントを制御する</title>
        <description>&lt;p&gt;複数のGitHubアカウントを制御したい．&lt;a href=&quot;https://dev.classmethod.jp/tool/github-ssh-sub-account-setting/&quot;&gt;SSHの秘密鍵を複数管理する方法&lt;/a&gt;もあるが，設定が結構大変で私には荷が重い．いろいろ調べた結果，&lt;a href=&quot;https://qiita.com/tq_jappy/items/6e2f81f372e4abaa5139&quot;&gt;HTTPSとトークンを使用する方法&lt;/a&gt;が手軽で良さそう．毎回検索するのが面倒なので，メモしておく．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;手順&lt;/h1&gt;

&lt;p&gt;全面的に&lt;a href=&quot;https://qiita.com/tq_jappy/items/6e2f81f372e4abaa5139&quot;&gt;https+アクセストークンを使ってGitHubのアカウントを使い分ける - Qiita&lt;/a&gt;に従う．&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;GitHubアクセストークンの作成&lt;/h2&gt;

&lt;p&gt;所望のGitHubアカウントにログインし，&lt;a href=&quot;https://github.com/settings/developers&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Settings &amp;gt; Developer settings&lt;/code&gt;&lt;/a&gt;から&lt;code class=&quot;highlighter-rouge&quot;&gt;Personal access tokens&lt;/code&gt;を選択する．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-02-24-github-token.png&quot; alt=&quot;github&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Generate new token&lt;/code&gt;を押す．&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2018-02-24-github-options.png&quot; alt=&quot;github&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Token description&lt;/code&gt;に，用途がわかるような名前をつける．&lt;code class=&quot;highlighter-rouge&quot;&gt;Select scopes&lt;/code&gt;で，アクセス権を指定できる．とりあえず&lt;code class=&quot;highlighter-rouge&quot;&gt;repo&lt;/code&gt;にチェックしとけば良さそう&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;．私の場合，Gistをブログに埋め込むことがあるので，&lt;code class=&quot;highlighter-rouge&quot;&gt;gist&lt;/code&gt;にもチェックを入れる．これでページ下部の&lt;code class=&quot;highlighter-rouge&quot;&gt;Generate token&lt;/code&gt;を押す．表示されるトークンをクリップボードにコピーする．&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;リポジトリをクローン&lt;/h2&gt;

&lt;p&gt;次のフォーマットで，リポジトリをクローンする．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/82a7e2f6628df832e0ba78aca62a9865.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;アカウント名を使い分ける場合は，以下の設定を忘れずに．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/b23267dfbd159ace2178f805380e48ad.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;あとは，何も考えずに&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;を使えば良い．&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.classmethod.jp/tool/github-ssh-sub-account-setting/&quot;&gt;【メモ】githubの複数アカウントにSSH接続するための設定手順 - Developers.IO&lt;/a&gt;：SSHを使った方法&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://qiita.com/tq_jappy/items/6e2f81f372e4abaa5139&quot;&gt;https+アクセストークンを使ってGitHubのアカウントを使い分ける - Qiita&lt;/a&gt;：HTTPS＋トークンを使った方法&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;他のはよくわからない． &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 24 Feb 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/02/24/github-token</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/02/24/github-token</guid>
        
        
        <category>github</category>
        
      </item>
    
      <item>
        <title>Brett Slatkin，Effective Python</title>
        <description>&lt;p&gt;&lt;i class=&quot;fa fa-spinner&quot;&gt;&lt;/i&gt; &lt;strong&gt;更新中&lt;/strong&gt;：&lt;a href=&quot;http://amzn.asia/gDvdj6b&quot;&gt;Brett Slatkin，Effective Python ―Pythonプログラムを改良する59項目&lt;/a&gt;を読む．&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;を効率的に書くための59のヒントが紹介されている．&lt;/p&gt;

&lt;p&gt;特に心に残った項目を以下にまとめる．Jupyter notebookは&lt;a href=&quot;https://github.com/haltaro/effective-python&quot;&gt;こちら&lt;/a&gt;．&lt;/p&gt;

&lt;h1 id=&quot;pythonic-thinking&quot;&gt;1章．Pythonic thinking&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;リスト内包表記には，3つ以上の式を避ける&lt;/h2&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/64f7a37df260ad506cb9be4d7b0ad106.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;リスト内包表記に毒されすぎて，もとの表記の何がわかりづらいのか，また修正された表記でわかりやすくなったのかピンとこない．気をつけないと．&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;大きな内包表記にはジェネレータ式を考える&lt;/h2&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/9284d0b7762c8d24b0cabf09af1723ef.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;イテレータとジェネレータについては，&lt;a href=&quot;https://qiita.com/tomotaka_ito/items/35f3eb108f587022fa09&quot;&gt;Pythonのイテレータとジェネレータ - Qiita&lt;/a&gt;がわかりやすい．&lt;/p&gt;

&lt;h2 id=&quot;tryexceptelsefinally&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;try&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;except&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;finally&lt;/code&gt;の各ブロックを活用する&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;except&lt;/code&gt;：エラーが補足された場合の処理．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt;：エラーが捕捉されなかった場合の処理．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;finally&lt;/code&gt;：エラーの捕捉にかかわらず，最後に実行される処理．&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-2&quot;&gt;2章．関数&lt;/h1&gt;

&lt;h2 id=&quot;none&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;を返すよりは例外を選ぶ&lt;/h2&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/7444e23cfc581fb1f2cb5dc8c8744503.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;と，&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;や空白文字などの他の値がすべて条件式において&lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;と評価されるため，エラーを引き起こしやすい．それはそうと，&lt;code class=&quot;highlighter-rouge&quot;&gt;raise from&lt;/code&gt;構文がよくわからない．あとで確認しよう．&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;クロージャが変数スコープとどう関わるか知っておく&lt;/h2&gt;

&lt;p&gt;クロージャとは，関数内の変数の名前解決が，その関数が宣言されたときのスコープで行われるもの．&lt;a href=&quot;https://www.lifewithpython.com/2014/09/python-use-closures.html&quot;&gt;Python Tips： Python でクロージャを使いたい - Life with python&lt;/a&gt;がとてもわかりやすい．&lt;/p&gt;

&lt;p&gt;ちなみにここで登場した特殊メソッド&lt;code class=&quot;highlighter-rouge&quot;&gt;__call__(self)&lt;/code&gt;は，クラスのインスタンスを関数っぽく呼び出したときに動作するもの．&lt;a href=&quot;https://qiita.com/kyo-bad/items/439d8cc3a0424c45214a&quot;&gt;Pythonのクラスにおける__call__メソッドの使い方 - Qiita&lt;/a&gt;がわかりやすい．&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;リストを返さずにジェネレータを返すことを考える&lt;/h2&gt;

&lt;p&gt;これはやってしまいがち．例えば&lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;中の単語のインデックスを返す関数は次のように定義できる．su&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/f029b65d87b604c8e3996ab9b5633eb6.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;ジェネレータを使うと，リストで返すよりもコードが明確になる．また，作業メモリに全ての入出力を保持する必要がないので，どのような長さの入力に対しても出力シーケンスを生成できる．&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;引数に対してイテレータを使うときには確実さを尊ぶ&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;StopIteration&lt;/code&gt;例外が起きたあとのジェネレータをもう一度反復した場合，難の例外も発生しない．つまり，出力のないイテレータと，出力があったが尽きてしまったイテレータを区別できない．&lt;/p&gt;

&lt;p&gt;よって，関数にイテレータを渡した場合，奇妙な振る舞いや欠損値を生む可能性がある．コンテナとイテレータを区別する方法として，組み込み関数&lt;code class=&quot;highlighter-rouge&quot;&gt;iter()&lt;/code&gt;に二度突っ込んで同じ結果が出るか確認する方法がある．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/7a9ee7ed87ec7e13276083f814d91968.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;イテレータとジェネレータとコンテナの関係については，&lt;a href=&quot;http://blog.amedama.jp/entry/2017/11/23/213233&quot;&gt;Python: ジェネレータをイテレータから理解する - CUBE SUGAR CONTAINER&lt;/a&gt;がわかりやすい．&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;可変長引数を使って，見た目をすっきりさせる&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;def function(*arg)&lt;/code&gt;と定義すると，引数は可変長であり，内部でタプルとして処理される．また&lt;code class=&quot;highlighter-rouge&quot;&gt;def function(**arg)&lt;/code&gt;と定義すると，やはり引数は可変長であり，内部で辞書型として処理される．&lt;a href=&quot;http://a2c.hatenablog.com/entry/20090301/1235909666&quot;&gt;pythonの引数にある*hogeとか**mapとか - When it’s ready.&lt;/a&gt;がわかりやすい．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/f7f1838ef92bae1325b656cc753493b0.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;ちなみに，関数に引数を渡すとき，&lt;code class=&quot;highlighter-rouge&quot;&gt;*list&lt;/code&gt;でリスト（タプル）を展開してくれるし，&lt;code class=&quot;highlighter-rouge&quot;&gt;**dict&lt;/code&gt;で辞書を展開してくれる．&lt;/p&gt;

&lt;p&gt;可変長引数は便利だが，展開時にメモリを大量に消費してしまう可能性がある．引数の入力個数が少ないことがわかっている場合に限って使った方が良い．&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Feb 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/02/18/effective-python</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/02/18/effective-python</guid>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Ubuntu 16.04にFish環境を構築する</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://fishshell.com/&quot;&gt;Fish&lt;/a&gt;（Frendly Interactive SHell）とは，シェルの一種．デフォルトのタブ保管が便利なので，Macでは重宝している．ローカルのUbuntuデスクトップでも使いたくなり，環境を構築することにした．&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;460&quot; src=&quot;https://www.youtube.com/embed/RiGvTt0K4Hs?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://fishshell.com/&quot;&gt;Fish&lt;/a&gt;本体に加え，パッケージ管理ツールの&lt;a href=&quot;https://github.com/fisherman/fisherman&quot;&gt;Fisherman&lt;/a&gt;，Fishテーマ&lt;a href=&quot;https://github.com/oh-my-fish/theme-bobthefish&quot;&gt;Bobthefish&lt;/a&gt;，および&lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;Powerlineフォント&lt;/a&gt;を導入した．また，ターミナルエミュレータ&lt;a href=&quot;https://gnometerminator.blogspot.jp/p/introduction.html&quot;&gt;Terminator&lt;/a&gt;のフォントをPowerline系に変更した．慣れてきたら，FishをデフォルトShellに設定しようと思う．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;環境&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Ubuntu 16.04&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gnometerminator.blogspot.jp/p/introduction.html&quot;&gt;Terminator&lt;/a&gt;：1.9.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;手順&lt;/h1&gt;

&lt;h2 id=&quot;fish&quot;&gt;Fishインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://takapi86.hatenablog.com/entry/2017/05/28/124642&quot;&gt;自宅のubuntu-16.04マシンのシェルをfishに変更した - takapi86のブログ&lt;/a&gt;を参考にした．&lt;code class=&quot;highlighter-rouge&quot;&gt;ppa&lt;/code&gt;を追加しないと，最新版のFishをインストールできず，後述するBobthefishのインストールでハマるので注意．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/dbba79b76244047de0c059edda1d8cf7.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;fisherman&quot;&gt;Fishermanインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fisherman/fisherman&quot;&gt;fisherman/fisherman - GitHub&lt;/a&gt;を参考にした．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/ba217c930f747792950ae5e954d984b1.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;bobthefish&quot;&gt;Bobthefishインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.classmethod.jp/etc/fish-shell-life/&quot;&gt;fish shell を使いたい人生だった - Developers.IO&lt;/a&gt;を参考にした．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/bd97069a1b87f1e6c13e480f9f17664c.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;powerline&quot;&gt;Powerlineインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;powerline/fonts - GitHub&lt;/a&gt;を参考にした．&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/haltaro/dc8a66e641df42c94cc7f5c672e98354.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;terminator&quot;&gt;Terminatorのフォント変更&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/yohei-a/20140223/1393120021&quot;&gt;ターミナルエミュレータ “Terminator” の背景を半透明にする - ablog&lt;/a&gt;を参考にした．&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Terminatorのウインドウ上で右クリックして，&lt;code class=&quot;highlighter-rouge&quot;&gt;Preference&lt;/code&gt;を選択する．&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Profiles &amp;gt; Font&lt;/code&gt;で任意のフォントを選択する．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;結果&lt;/h2&gt;

&lt;p&gt;こんな感じになった．&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;460&quot; src=&quot;https://www.youtube.com/embed/RiGvTt0K4Hs?rel=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;section-3&quot;&gt;感想&lt;/h1&gt;

&lt;p&gt;想定よりずっと簡単に導入できた．唯一の不満は，FishはBashと文法が違うこと．デフォルトシェルにするためには，設定ファイル&lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt;を翻訳する必要がある…．いつかやる．&lt;/p&gt;

&lt;h1 id=&quot;section-4&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://takapi86.hatenablog.com/entry/2017/05/28/124642&quot;&gt;自宅のubuntu-16.04マシンのシェルをfishに変更した - takapi86のブログ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fisherman/fisherman&quot;&gt;fisherman/fisherman - GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/oh-my-fish/theme-bobthefish&quot;&gt;oh-my-fish/theme-bobthefish - GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.classmethod.jp/etc/fish-shell-life/&quot;&gt;fish shell を使いたい人生だった - Developers.IO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;powerline/fonts - GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/yohei-a/20140223/1393120021&quot;&gt;ターミナルエミュレータ “Terminator” の背景を半透明にする - ablog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 17 Feb 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/02/17/fish</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/02/17/fish</guid>
        
        
        <category>shell</category>
        
      </item>
    
      <item>
        <title>マーク・ジェフリー，データ・ドリブン・マーケティング</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://amzn.asia/6WKHTCO&quot;&gt;マーク・ジェフリー，データ・ドリブン・マーケティング - 最低限知っておくべき15の指標&lt;/a&gt;を読んだ．&lt;a href=&quot;http://marketing-base.jp/books/6204&quot;&gt;どうやら原著は2010年1月に発刊されたらしく&lt;/a&gt;，古さを感じる部分があるが，勉強のとっかかりとして基本を押さえるには良いと思った．&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;概要&lt;/h1&gt;

&lt;p&gt;かつて，マーケティング施策は定量評価が難しいという風潮があったため，行動に対して評価されることが多かった．そこで本書では，マーケティング施策を定量的に評価するための15の指標と，これらを用いた施策管理方法を紹介する．&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;1. マーケティング格差&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;フォーチュン100社に含まれる大企業の中でさえ，マーケティング格差が存在する（2010年当時）．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;2. 何から始めるべきか？&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;データ・ドリブン・マーケティングの障壁として，次の5点がある：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;何から手を付ければいいかわからない&lt;/strong&gt;：まずは小さくはじめて，成功事例を積み上げること．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;因果関係がわかならい&lt;/strong&gt;：適切な指標を使うこと．また，対照実験を行うこと．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;データが足りない&lt;/strong&gt;：B2B企業は，代理店にデータ共有のメリットを示すこと．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;経営資源やツールが足りない&lt;/strong&gt;：頑張って絞り出すこと．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;組織や人に問題がある&lt;/strong&gt;：小さく仲間づくりを始めること．可能であれば，役員も巻き込むこと．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;データ・ドリブン・マーケティングを実践するロードマップ：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;設計&lt;/strong&gt;：関係者が理解しやすい明解な実行計画．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;診断&lt;/strong&gt;：事実把握および洞察．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;機会&lt;/strong&gt;：マーケティング機会の特定とアクションプラン．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;ツール&lt;/strong&gt;：定期的なレビューを行う組織体制の構築．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;プロセス&lt;/strong&gt;：定期的なレビューに基づく意思決定．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;3. 10の伝統的なマーケティング指標&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ブランド認知率&lt;/strong&gt;：商品やサービスの想起で計測する．大規模調査をする予算がない場合は，カスタムURLなどを用いてリーチを計測する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;試乗（お試し）&lt;/strong&gt;：比較検討・評価段階の指標．試乗など，購入前の商品のお試し使用で評価する．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;解約（離反）率&lt;/strong&gt;：ロイヤルティ指標．解約率や離反率．年単位で計算されることが多い．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;顧客満足度&lt;/strong&gt;：CSAT（Customer Satisfaction）．マーケティングの黄金指標．「友人にこの商品を勧めますか」というアンケートで計測される．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;オファー応諾率&lt;/strong&gt;：マーケティング施策の運用効率を表す指標．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;利益&lt;/strong&gt;：売上高 - 費用．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;正味現在価値&lt;/strong&gt;：NPV（Net Present Value）．複利割引した将来的な利益の総和．NPVが正になる施策は実行する価値がある．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;内部収益率&lt;/strong&gt;：IRR（Internal Rate of Return）．NVPが正になるための，利益の割引率．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;投資回収期間&lt;/strong&gt;：売上高が費用を上回るまでにかかる期間．&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;顧客価値指標&lt;/strong&gt;：CLTV（Customer Lifetime Value）．当該顧客の将来的な価値を複利割引して総和したもの．CLTVが高い顧客は優良顧客である．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;4. 5つの重要な非財務系指標&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ブランド認知率，試乗（お試し），解約（離反）率，顧客満足度，オファー応諾率を詳説する．&lt;/li&gt;
  &lt;li&gt;3年間の離反率を1年間の離反率に換算するとき，単純に3で割っていいんだっけ？三乗根とかじゃないの？&lt;/li&gt;
  &lt;li&gt;​優れたロイヤルティマーケティングとは，企業の経済的負担が少なく，かつ顧客への価値提供が大きい施策．&lt;/li&gt;
  &lt;li&gt;​
需要喚起型マーケティングにおいては，顧客獲得単価が顧客獲得利益より小さい場合，そのようなキャンペーンは中止するべき．&lt;/li&gt;
  &lt;li&gt;オファー応諾率の改善や送付単価の低減は，マーケティング費用対効果を劇的に改善する．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-5&quot;&gt;5. 投資リターンを示せ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;利益，正味現在価値，内部収益率，投資回収期間の詳説する．&lt;/li&gt;
  &lt;li&gt;売上高を営業の評価指標にする企業が多いが，本来は利益を評価指標にすべき．&lt;/li&gt;
  &lt;li&gt;マネジメントの意思決定では，絶対的な正解や不正解は存在しない．しかし，より現状にマッチした答えは存在する．&lt;/li&gt;
  &lt;li&gt;無借金経営の企業では，企業価値を発行済み株式数で割ったものが株価となる．つまり，あるマーケティング施策の正味現在価値を株式数で割ると，その施策が株価に与える影響と等しくなる．&lt;/li&gt;
  &lt;li&gt;多くの上場企業では，経営陣の賞与は株価と連動する．&lt;/li&gt;
  &lt;li&gt;内部収益率は，正味現在価値が0となる時のハードルレート&lt;script type=&quot;math/tex&quot;&gt;r&lt;/script&gt;の値．内部収益率が&lt;script type=&quot;math/tex&quot;&gt;r&lt;/script&gt;より大きくなる時，正味現在価値が&lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;より大きくなるので，その施策を実施すべきである．&lt;/li&gt;
  &lt;li&gt;マーケティング投資収益率（ROMI）は，正味現在価値，内部収益率，および投資回収期間ををもとに，総合的に判断される．&lt;/li&gt;
  &lt;li&gt;ROMIの計算期間は，1年，2年，あるいは3年を利用することが多い．IT関連製品の場合は，3年を超えて計算することは稀．逆に自動車の場合は，9年間など長期間で計算される．&lt;/li&gt;
  &lt;li&gt;感度分析とは，前提条件を様々に変更して，ROMIの変化を観察する．エクセルのデータフレーム機能で容易に実装できる．&lt;/li&gt;
  &lt;li&gt;不確実な変数が3つ以上ある場合は，モンテカルロ法を使う．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-6&quot;&gt;6. すべての顧客は等しく重要……ではない&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;顧客生涯価値（CLTV）は，継続率と割引率を考慮して，ある顧客から生涯得られる利益を総和したもの．&lt;/li&gt;
  &lt;li&gt;CLTVがマイナスの顧客が判明した場合は，その顧客を拒否するのではなく，その原因となるプロセスを修正する．&lt;/li&gt;
  &lt;li&gt;CLTVが高い顧客に対しては維持および更なるアップセルとクロスセルを，中程度の顧客にはアップセルとクロスセルを，そしてマイナスの顧客には支出の最小化を図る．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-7&quot;&gt;7. クリックからバリューへ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;5つの重要な指標：
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;クリック単価（CPC）&lt;/strong&gt;：ネット広告の評価指標．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;トランザクションコンバージョン率（TCR）&lt;/strong&gt;：広告をクリックしてウェブサイトに遷移したユーザが商品を購入した割合を表す．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;広告費用対効果（ROAS）&lt;/strong&gt;：(売上 - 費用) / 費用．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;直帰率&lt;/strong&gt;：滞在5秒未満で離脱してしまうユーザの割合．解約率に相当する．&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;口コミ増幅係数（WOM）&lt;/strong&gt;：(ダイレクトクリック数 + 友人へのシェアから発生したクリック数)/ダイレクトクリック数．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ネット広告におけるオファー応諾率は，CTR（クリック率） * TCRに相当する．&lt;/li&gt;
  &lt;li&gt;アトリビューション分析とは，ユーザが推移した各ページの，売上への貢献を分析すること．クッキーを用いて実施される．&lt;/li&gt;
  &lt;li&gt;WOMが大きくなると実質的なCPCが減少するとかかれているが，これは各プラットフォームの料金体系に依存すると思う．例えば料金体系変更前のFacebookでは，シェア自体にコストがかかるため，口コミが増えてもCPCは減少しない（CTRは上がるが）．&lt;a href=&quot;https://www.advertimes.com/20150709/article197729/&quot;&gt;CPC増、CTR減に…Facebook広告がクリックカウントを変更 - AdverTimes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-8&quot;&gt;8. アジャイル・マーケティング&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;アジャイルマーケティングとは，データ収集をキャンペーン中に行い，高速に軌道修正するマーケティングである．&lt;/li&gt;
  &lt;li&gt;マーケティング施策は，途中で軌道修正可能なように設計するべき．具体的には，キャンペーン開始前に，成功，失敗の基準を設定する．意思決定ポイントをあらかじめ設定する．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-9&quot;&gt;9. 「まさにこれが必要だったんだ！」&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;傾向分析モデル，アソシエーション分析，決定木分析を紹介
    &lt;ul&gt;
      &lt;li&gt;傾向分析モデルとして，ロジスティック回帰を紹介．&lt;/li&gt;
      &lt;li&gt;アソシエーション分析として，クラスター分析を紹介．&lt;/li&gt;
      &lt;li&gt;技術的な詳細は語られていないので，別途自分で調べてまとめよう．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;予測の正確さもさることながら，視認性や解釈のし易さも，分析モデルにとって重要．&lt;/li&gt;
  &lt;li&gt;解析マーケティングは，クロスセルやアップセル，顧客リテンション(解約率の削減)向けに多用され，ROMIと親和性が高い．&lt;/li&gt;
  &lt;li&gt;イベントドリブンマーケティングは，アジャイルマーケティングを一歩進めたもの．&lt;/li&gt;
  &lt;li&gt;解析マーケティングの財務計画では，正味現在価値，内部収益率，投資回収期間を使って投資リターンを定量化する．重要な変数は，オファー応諾率の上昇幅と，利益の増価額．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;it&quot;&gt;10. データ・ドリブン・マーケティングに必要なITインフラ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;EDW（今で言うDMP）のリスク要因：
    &lt;ul&gt;
      &lt;li&gt;プロジェクトの目的が明確に定義されていない．&lt;/li&gt;
      &lt;li&gt;経営陣や経営幹部の支援がない．&lt;/li&gt;
      &lt;li&gt;社内政治や社内文化と合わない．&lt;/li&gt;
      &lt;li&gt;予算，時間，人材などのリソース不足．&lt;/li&gt;
      &lt;li&gt;システムに拡張性がない．&lt;/li&gt;
      &lt;li&gt;開発技術の選定が適切でない．&lt;/li&gt;
      &lt;li&gt;開発チームに適切なスキルがない．外注開発先に依存している．&lt;/li&gt;
      &lt;li&gt;既存のデータベースの質が悪い．&lt;/li&gt;
      &lt;li&gt;人事異動によりスキルをもった人材が流出する．&lt;/li&gt;
      &lt;li&gt;トレーニングが不足している．&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-10&quot;&gt;11. マーケティングの予算，テクノロジー，プロセス&lt;/h2&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;マーケティングに使用するテクノロジーと，業績の間に，統計的に有意な相関はない．企業業績と相関するのは，MCM(Marketing campaign management) 組織能力だけ．MCM組織能力とは，選択，ポートフォリオ最適化，モニタリング，適応学習からなる．&lt;/li&gt;
  &lt;li&gt;上位企業と下位企業には，マーケティング予算配分に違いがある．上位企業は，ブランディングおよびITインフラにより多く投資しており，需要喚起型マーケティングへの投資は抑えめ．&lt;/li&gt;
  &lt;li&gt;本書で紹介した15の指標を統合活用するステップ：
    &lt;ol&gt;
      &lt;li&gt;スコアカードで成果を測定する．&lt;/li&gt;
      &lt;li&gt;アジャイル・マーケティングで，柔軟に軌道修正する．&lt;/li&gt;
      &lt;li&gt;解析マーケティングで，動的なターゲティングやセグメンテーションを可能にする．&lt;/li&gt;
      &lt;li&gt;MCMプロセスを向上させる．&lt;/li&gt;
      &lt;li&gt;クリエイティブXファクターを活用する．&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-11&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://marketing-base.jp/books/6204&quot;&gt;今からでも遅くない，データ活用の経営
――書評『データ・ドリブン・マーケティング―――最低限知っておくべき15の指標』 - MarketingBase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 17 Feb 2018 00:00:00 +0900</pubDate>
        <link>https://haltaro.github.io/2018/02/17/data-driven</link>
        <guid isPermaLink="true">https://haltaro.github.io/2018/02/17/data-driven</guid>
        
        
        <category>marketing</category>
        
      </item>
    
  </channel>
</rss>
